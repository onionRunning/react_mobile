{"version":3,"sources":["../src/integer.js"],"names":["propValue","props","validator","rest","requiredInteger"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEA,SAAA,eAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAyD;AAAA,MACnCA,SADmC,GACrBC,KADqB,CAAA,QAAA,CAAA;;AAEvD,MAAID,SAAS,IAATA,IAAAA,IAAqB,CAAC,CAAA,GAAA,UAAA,CAAA,SAAA,CAAA,EAA1B,SAA0B,CAA1B,EAAgD;AAC9C,WAAO,IAAA,UAAA,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,MAAA,EAAA,MAAA,CAAA,aAAA,EAAP,qBAAO,CAAA,CAAP;AACD;;AACD,SAAA,IAAA;AACD;;AAED,IAAME,SAAS,GAAG,SAAA,OAAA,CAAA,KAAA,EAAA,QAAA,EAA2C;AAAA,MACvCF,SADuC,GACzBC,KADyB,CAAA,QAAA,CAAA;;AAG3D,MAAID,SAAS,IAAb,IAAA,EAAuB;AACrB,WAAA,IAAA;AACD;;AAL0D,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANG,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,IAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAO3D,SAAOC,eAAe,CAAfA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AAPF,CAAA;;AAUAF,SAAS,CAATA,UAAAA,GAAAA,eAAAA;;eAEe,SAAA,QAAA,GAAA;AAAA,SAAM,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAN,SAAM,CAAN","sourcesContent":["import isInteger from './helpers/isInteger';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction requiredInteger(props, propName, componentName) {\n  const { [propName]: propValue } = props;\n  if (propValue == null || !isInteger(propValue)) {\n    return new RangeError(`${propName} in ${componentName} must be an integer`);\n  }\n  return null;\n}\n\nconst validator = function integer(props, propName, ...rest) {\n  const { [propName]: propValue } = props;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredInteger(props, propName, ...rest);\n};\n\nvalidator.isRequired = requiredInteger;\n\nexport default () => wrapValidator(validator, 'integer');\n"]}