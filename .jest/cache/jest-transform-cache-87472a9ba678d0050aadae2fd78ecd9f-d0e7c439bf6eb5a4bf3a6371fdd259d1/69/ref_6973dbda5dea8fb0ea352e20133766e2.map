{"version":3,"sources":["../src/ref.js"],"names":["isPrototypeOf","Object","prototype","ownProperties","Component","PureComponent","propValue","props","isCallbackRef","isNewRef","rest","requiredRef","ref"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;IAEQA,a,GAAkBC,MAAM,CAACC,SAAPD,CAAlBD,a;;AAER,SAAA,QAAA,CAAA,IAAA,EAAwB;AACtB,MAAI,CAAC,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAL,IAAK,CAAL,EAA0B;AACxB,WAAA,KAAA;AACD;;AACD,MAAMG,aAAa,GAAGF,MAAM,CAANA,IAAAA,CAAtB,IAAsBA,CAAtB;AACA,SAAOE,aAAa,CAAbA,MAAAA,KAAAA,CAAAA,IAA8BA,aAAa,CAAbA,CAAa,CAAbA,KAArC,SAAA;AACD;;AAED,SAAA,aAAA,CAAA,IAAA,EAA6B;AAC3B,SAAO,OAAA,IAAA,KAAA,UAAA,IACF,CAACH,aAAa,CAAbA,IAAAA,CAAmBI,MAAAA,CAAnBJ,SAAAA,EADC,IACDA,CADC,KAED,CAACK,MAAAA,CAAD,aAAA,IAAkB,CAACL,aAAa,CAAbA,IAAAA,CAAmBK,MAAAA,CAAnBL,aAAAA,EAFzB,IAEyBA,CAFlB,CAAP;AAGD;;AAED,SAAA,WAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAqD;AACnD,MAAMM,SAAS,GAAGC,KAAK,CAAvB,QAAuB,CAAvB;;AAEA,MAAIC,aAAa,CAAbA,SAAa,CAAbA,IAA4BC,QAAQ,CAAxC,SAAwC,CAAxC,EAAqD;AACnD,WAAA,IAAA;AACD;;AAED,SAAO,IAAA,SAAA,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,MAAA,EAAA,MAAA,CAAA,aAAA,EAAP,gBAAO,CAAA,CAAP;AACD;;AAED,SAAA,GAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAsD;AACpD,MAAMH,SAAS,GAAGC,KAAK,CAAvB,QAAuB,CAAvB;;AAEA,MAAID,SAAS,IAAb,IAAA,EAAuB;AACrB,WAAA,IAAA;AACD;;AALmD,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANI,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,IAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAOpD,SAAOC,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,aAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AACD;;AAEDC,GAAG,CAAHA,UAAAA,GAAAA,WAAAA;;eAEe,SAAA,QAAA,GAAA;AAAA,SAAM,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,GAAA,EAAN,KAAM,CAAN","sourcesContent":["import { Component, PureComponent } from 'react';\nimport isPlainObject from './helpers/isPlainObject';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst { isPrototypeOf } = Object.prototype;\n\nfunction isNewRef(prop) {\n  if (!isPlainObject(prop)) {\n    return false;\n  }\n  const ownProperties = Object.keys(prop);\n  return ownProperties.length === 1 && ownProperties[0] === 'current';\n}\n\nfunction isCallbackRef(prop) {\n  return typeof prop === 'function'\n    && !isPrototypeOf.call(Component, prop)\n    && (!PureComponent || !isPrototypeOf.call(PureComponent, prop));\n}\n\nfunction requiredRef(props, propName, componentName) {\n  const propValue = props[propName];\n\n  if (isCallbackRef(propValue) || isNewRef(propValue)) {\n    return null;\n  }\n\n  return new TypeError(`${propName} in ${componentName} must be a ref`);\n}\n\nfunction ref(props, propName, componentName, ...rest) {\n  const propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredRef(props, propName, componentName, ...rest);\n}\n\nref.isRequired = requiredRef;\n\nexport default () => wrapValidator(ref, 'ref');\n"]}