a894d0f7ad97c6977e3e00fd8096fa2b
'use strict';

var ArraySpeciesCreate = require('es-abstract/2019/ArraySpeciesCreate');

var FlattenIntoArray = require('es-abstract/2019/FlattenIntoArray');

var Get = require('es-abstract/2019/Get');

var ToInteger = require('es-abstract/2019/ToInteger');

var ToLength = require('es-abstract/2019/ToLength');

var ToObject = require('es-abstract/2019/ToObject');

module.exports = function flat() {
  var O = ToObject(this);
  var sourceLen = ToLength(Get(O, 'length'));
  var depthNum = 1;

  if (arguments.length > 0 && typeof arguments[0] !== 'undefined') {
    depthNum = ToInteger(arguments[0]);
  }

  var A = ArraySpeciesCreate(O, 0);
  FlattenIntoArray(A, O, sourceLen, 0, depthNum);
  return A;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcGxlbWVudGF0aW9uLmpzIl0sIm5hbWVzIjpbIkFycmF5U3BlY2llc0NyZWF0ZSIsInJlcXVpcmUiLCJGbGF0dGVuSW50b0FycmF5IiwiR2V0IiwiVG9JbnRlZ2VyIiwiVG9MZW5ndGgiLCJUb09iamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJmbGF0IiwiTyIsInNvdXJjZUxlbiIsImRlcHRoTnVtIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiQSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsa0JBQWtCLEdBQUdDLE9BQU8sQ0FBQyxxQ0FBRCxDQUFoQzs7QUFDQSxJQUFJQyxnQkFBZ0IsR0FBR0QsT0FBTyxDQUFDLG1DQUFELENBQTlCOztBQUNBLElBQUlFLEdBQUcsR0FBR0YsT0FBTyxDQUFDLHNCQUFELENBQWpCOztBQUNBLElBQUlHLFNBQVMsR0FBR0gsT0FBTyxDQUFDLDRCQUFELENBQXZCOztBQUNBLElBQUlJLFFBQVEsR0FBR0osT0FBTyxDQUFDLDJCQUFELENBQXRCOztBQUNBLElBQUlLLFFBQVEsR0FBR0wsT0FBTyxDQUFDLDJCQUFELENBQXRCOztBQUVBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsSUFBVCxHQUFnQjtBQUNoQyxNQUFJQyxDQUFDLEdBQUdKLFFBQVEsQ0FBQyxJQUFELENBQWhCO0FBQ0EsTUFBSUssU0FBUyxHQUFHTixRQUFRLENBQUNGLEdBQUcsQ0FBQ08sQ0FBRCxFQUFJLFFBQUosQ0FBSixDQUF4QjtBQUVBLE1BQUlFLFFBQVEsR0FBRyxDQUFmOztBQUNBLE1BQUlDLFNBQVMsQ0FBQ0MsTUFBVixHQUFtQixDQUFuQixJQUF3QixPQUFPRCxTQUFTLENBQUMsQ0FBRCxDQUFoQixLQUF3QixXQUFwRCxFQUFpRTtBQUNoRUQsSUFBQUEsUUFBUSxHQUFHUixTQUFTLENBQUNTLFNBQVMsQ0FBQyxDQUFELENBQVYsQ0FBcEI7QUFDQTs7QUFFRCxNQUFJRSxDQUFDLEdBQUdmLGtCQUFrQixDQUFDVSxDQUFELEVBQUksQ0FBSixDQUExQjtBQUNBUixFQUFBQSxnQkFBZ0IsQ0FBQ2EsQ0FBRCxFQUFJTCxDQUFKLEVBQU9DLFNBQVAsRUFBa0IsQ0FBbEIsRUFBcUJDLFFBQXJCLENBQWhCO0FBQ0EsU0FBT0csQ0FBUDtBQUNBLENBWkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBBcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCdlcy1hYnN0cmFjdC8yMDE5L0FycmF5U3BlY2llc0NyZWF0ZScpO1xudmFyIEZsYXR0ZW5JbnRvQXJyYXkgPSByZXF1aXJlKCdlcy1hYnN0cmFjdC8yMDE5L0ZsYXR0ZW5JbnRvQXJyYXknKTtcbnZhciBHZXQgPSByZXF1aXJlKCdlcy1hYnN0cmFjdC8yMDE5L0dldCcpO1xudmFyIFRvSW50ZWdlciA9IHJlcXVpcmUoJ2VzLWFic3RyYWN0LzIwMTkvVG9JbnRlZ2VyJyk7XG52YXIgVG9MZW5ndGggPSByZXF1aXJlKCdlcy1hYnN0cmFjdC8yMDE5L1RvTGVuZ3RoJyk7XG52YXIgVG9PYmplY3QgPSByZXF1aXJlKCdlcy1hYnN0cmFjdC8yMDE5L1RvT2JqZWN0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmxhdCgpIHtcblx0dmFyIE8gPSBUb09iamVjdCh0aGlzKTtcblx0dmFyIHNvdXJjZUxlbiA9IFRvTGVuZ3RoKEdldChPLCAnbGVuZ3RoJykpO1xuXG5cdHZhciBkZXB0aE51bSA9IDE7XG5cdGlmIChhcmd1bWVudHMubGVuZ3RoID4gMCAmJiB0eXBlb2YgYXJndW1lbnRzWzBdICE9PSAndW5kZWZpbmVkJykge1xuXHRcdGRlcHRoTnVtID0gVG9JbnRlZ2VyKGFyZ3VtZW50c1swXSk7XG5cdH1cblxuXHR2YXIgQSA9IEFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcblx0RmxhdHRlbkludG9BcnJheShBLCBPLCBzb3VyY2VMZW4sIDAsIGRlcHRoTnVtKTtcblx0cmV0dXJuIEE7XG59O1xuIl19