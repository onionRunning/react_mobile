fc8de1d495b3b3cb77e3033f06bae514
'use strict';

var Parser = require('./parser'),
    Serializer = require('./serializer'); // Shorthands


exports.parse = function parse(html, options) {
  var parser = new Parser(options);
  return parser.parse(html);
};

exports.parseFragment = function parseFragment(fragmentContext, html, options) {
  if (typeof fragmentContext === 'string') {
    options = html;
    html = fragmentContext;
    fragmentContext = null;
  }

  var parser = new Parser(options);
  return parser.parseFragment(html, fragmentContext);
};

exports.serialize = function (node, options) {
  var serializer = new Serializer(node, options);
  return serializer.serialize();
}; // Tree adapters


exports.treeAdapters = {
  default: require('./tree_adapters/default'),
  htmlparser2: require('./tree_adapters/htmlparser2')
}; // Streaming

exports.ParserStream = require('./parser/parser_stream');
exports.PlainTextConversionStream = require('./parser/plain_text_conversion_stream');
exports.SerializerStream = require('./serializer/serializer_stream');
exports.SAXParser = require('./sax');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBhcnNlciIsInJlcXVpcmUiLCJTZXJpYWxpemVyIiwiZXhwb3J0cyIsInBhcnNlIiwiaHRtbCIsIm9wdGlvbnMiLCJwYXJzZXIiLCJwYXJzZUZyYWdtZW50IiwiZnJhZ21lbnRDb250ZXh0Iiwic2VyaWFsaXplIiwibm9kZSIsInNlcmlhbGl6ZXIiLCJ0cmVlQWRhcHRlcnMiLCJkZWZhdWx0IiwiaHRtbHBhcnNlcjIiLCJQYXJzZXJTdHJlYW0iLCJQbGFpblRleHRDb252ZXJzaW9uU3RyZWFtIiwiU2VyaWFsaXplclN0cmVhbSIsIlNBWFBhcnNlciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFwQjtBQUFBLElBQ0lDLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FEeEIsQyxDQUlBOzs7QUFDQUUsT0FBTyxDQUFDQyxLQUFSLEdBQWdCLFNBQVNBLEtBQVQsQ0FBZUMsSUFBZixFQUFxQkMsT0FBckIsRUFBOEI7QUFDMUMsTUFBSUMsTUFBTSxHQUFHLElBQUlQLE1BQUosQ0FBV00sT0FBWCxDQUFiO0FBRUEsU0FBT0MsTUFBTSxDQUFDSCxLQUFQLENBQWFDLElBQWIsQ0FBUDtBQUNILENBSkQ7O0FBTUFGLE9BQU8sQ0FBQ0ssYUFBUixHQUF3QixTQUFTQSxhQUFULENBQXVCQyxlQUF2QixFQUF3Q0osSUFBeEMsRUFBOENDLE9BQTlDLEVBQXVEO0FBQzNFLE1BQUksT0FBT0csZUFBUCxLQUEyQixRQUEvQixFQUF5QztBQUNyQ0gsSUFBQUEsT0FBTyxHQUFHRCxJQUFWO0FBQ0FBLElBQUFBLElBQUksR0FBR0ksZUFBUDtBQUNBQSxJQUFBQSxlQUFlLEdBQUcsSUFBbEI7QUFDSDs7QUFFRCxNQUFJRixNQUFNLEdBQUcsSUFBSVAsTUFBSixDQUFXTSxPQUFYLENBQWI7QUFFQSxTQUFPQyxNQUFNLENBQUNDLGFBQVAsQ0FBcUJILElBQXJCLEVBQTJCSSxlQUEzQixDQUFQO0FBQ0gsQ0FWRDs7QUFZQU4sT0FBTyxDQUFDTyxTQUFSLEdBQW9CLFVBQVVDLElBQVYsRUFBZ0JMLE9BQWhCLEVBQXlCO0FBQ3pDLE1BQUlNLFVBQVUsR0FBRyxJQUFJVixVQUFKLENBQWVTLElBQWYsRUFBcUJMLE9BQXJCLENBQWpCO0FBRUEsU0FBT00sVUFBVSxDQUFDRixTQUFYLEVBQVA7QUFDSCxDQUpELEMsQ0FPQTs7O0FBQ0FQLE9BQU8sQ0FBQ1UsWUFBUixHQUF1QjtBQUNuQkMsRUFBQUEsT0FBTyxFQUFFYixPQUFPLENBQUMseUJBQUQsQ0FERztBQUVuQmMsRUFBQUEsV0FBVyxFQUFFZCxPQUFPLENBQUMsNkJBQUQ7QUFGRCxDQUF2QixDLENBTUE7O0FBQ0FFLE9BQU8sQ0FBQ2EsWUFBUixHQUF1QmYsT0FBTyxDQUFDLHdCQUFELENBQTlCO0FBQ0FFLE9BQU8sQ0FBQ2MseUJBQVIsR0FBb0NoQixPQUFPLENBQUMsdUNBQUQsQ0FBM0M7QUFDQUUsT0FBTyxDQUFDZSxnQkFBUixHQUEyQmpCLE9BQU8sQ0FBQyxnQ0FBRCxDQUFsQztBQUNBRSxPQUFPLENBQUNnQixTQUFSLEdBQW9CbEIsT0FBTyxDQUFDLE9BQUQsQ0FBM0IiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBQYXJzZXIgPSByZXF1aXJlKCcuL3BhcnNlcicpLFxuICAgIFNlcmlhbGl6ZXIgPSByZXF1aXJlKCcuL3NlcmlhbGl6ZXInKTtcblxuXG4vLyBTaG9ydGhhbmRzXG5leHBvcnRzLnBhcnNlID0gZnVuY3Rpb24gcGFyc2UoaHRtbCwgb3B0aW9ucykge1xuICAgIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHBhcnNlci5wYXJzZShodG1sKTtcbn07XG5cbmV4cG9ydHMucGFyc2VGcmFnbWVudCA9IGZ1bmN0aW9uIHBhcnNlRnJhZ21lbnQoZnJhZ21lbnRDb250ZXh0LCBodG1sLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBmcmFnbWVudENvbnRleHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG9wdGlvbnMgPSBodG1sO1xuICAgICAgICBodG1sID0gZnJhZ21lbnRDb250ZXh0O1xuICAgICAgICBmcmFnbWVudENvbnRleHQgPSBudWxsO1xuICAgIH1cblxuICAgIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHBhcnNlci5wYXJzZUZyYWdtZW50KGh0bWwsIGZyYWdtZW50Q29udGV4dCk7XG59O1xuXG5leHBvcnRzLnNlcmlhbGl6ZSA9IGZ1bmN0aW9uIChub2RlLCBvcHRpb25zKSB7XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcihub2RlLCBvcHRpb25zKTtcblxuICAgIHJldHVybiBzZXJpYWxpemVyLnNlcmlhbGl6ZSgpO1xufTtcblxuXG4vLyBUcmVlIGFkYXB0ZXJzXG5leHBvcnRzLnRyZWVBZGFwdGVycyA9IHtcbiAgICBkZWZhdWx0OiByZXF1aXJlKCcuL3RyZWVfYWRhcHRlcnMvZGVmYXVsdCcpLFxuICAgIGh0bWxwYXJzZXIyOiByZXF1aXJlKCcuL3RyZWVfYWRhcHRlcnMvaHRtbHBhcnNlcjInKVxufTtcblxuXG4vLyBTdHJlYW1pbmdcbmV4cG9ydHMuUGFyc2VyU3RyZWFtID0gcmVxdWlyZSgnLi9wYXJzZXIvcGFyc2VyX3N0cmVhbScpO1xuZXhwb3J0cy5QbGFpblRleHRDb252ZXJzaW9uU3RyZWFtID0gcmVxdWlyZSgnLi9wYXJzZXIvcGxhaW5fdGV4dF9jb252ZXJzaW9uX3N0cmVhbScpO1xuZXhwb3J0cy5TZXJpYWxpemVyU3RyZWFtID0gcmVxdWlyZSgnLi9zZXJpYWxpemVyL3NlcmlhbGl6ZXJfc3RyZWFtJyk7XG5leHBvcnRzLlNBWFBhcnNlciA9IHJlcXVpcmUoJy4vc2F4Jyk7XG4iXX0=