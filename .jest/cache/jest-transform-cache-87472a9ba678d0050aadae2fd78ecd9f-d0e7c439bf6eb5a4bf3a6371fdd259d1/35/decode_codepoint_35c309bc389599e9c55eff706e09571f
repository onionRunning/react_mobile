b04009d8fd3528d294bd23b214fd87b3
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var decode_json_1 = __importDefault(require("./maps/decode.json")); // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119


function decodeCodePoint(codePoint) {
  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {
    return "\uFFFD";
  }

  if (codePoint in decode_json_1.default) {
    codePoint = decode_json_1.default[codePoint];
  }

  var output = "";

  if (codePoint > 0xffff) {
    codePoint -= 0x10000;
    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);
    codePoint = 0xdc00 | codePoint & 0x3ff;
  }

  output += String.fromCharCode(codePoint);
  return output;
}

exports.default = decodeCodePoint;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY29kZV9jb2RlcG9pbnQuanMiXSwibmFtZXMiOlsiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlX2pzb25fMSIsInJlcXVpcmUiLCJkZWNvZGVDb2RlUG9pbnQiLCJjb2RlUG9pbnQiLCJkZWZhdWx0Iiwib3V0cHV0IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxlQUFlLEdBQUksUUFBUSxLQUFLQSxlQUFkLElBQWtDLFVBQVVDLEdBQVYsRUFBZTtBQUNuRSxTQUFRQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWixHQUEwQkQsR0FBMUIsR0FBZ0M7QUFBRSxlQUFXQTtBQUFiLEdBQXZDO0FBQ0gsQ0FGRDs7QUFHQUUsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxhQUFhLEdBQUdQLGVBQWUsQ0FBQ1EsT0FBTyxDQUFDLG9CQUFELENBQVIsQ0FBbkMsQyxDQUNBOzs7QUFDQSxTQUFTQyxlQUFULENBQXlCQyxTQUF6QixFQUFvQztBQUNoQyxNQUFLQSxTQUFTLElBQUksTUFBYixJQUF1QkEsU0FBUyxJQUFJLE1BQXJDLElBQWdEQSxTQUFTLEdBQUcsUUFBaEUsRUFBMEU7QUFDdEUsV0FBTyxRQUFQO0FBQ0g7O0FBQ0QsTUFBSUEsU0FBUyxJQUFJSCxhQUFhLENBQUNJLE9BQS9CLEVBQXdDO0FBQ3BDRCxJQUFBQSxTQUFTLEdBQUdILGFBQWEsQ0FBQ0ksT0FBZCxDQUFzQkQsU0FBdEIsQ0FBWjtBQUNIOztBQUNELE1BQUlFLE1BQU0sR0FBRyxFQUFiOztBQUNBLE1BQUlGLFNBQVMsR0FBRyxNQUFoQixFQUF3QjtBQUNwQkEsSUFBQUEsU0FBUyxJQUFJLE9BQWI7QUFDQUUsSUFBQUEsTUFBTSxJQUFJQyxNQUFNLENBQUNDLFlBQVAsQ0FBc0JKLFNBQVMsS0FBSyxFQUFmLEdBQXFCLEtBQXRCLEdBQStCLE1BQW5ELENBQVY7QUFDQUEsSUFBQUEsU0FBUyxHQUFHLFNBQVVBLFNBQVMsR0FBRyxLQUFsQztBQUNIOztBQUNERSxFQUFBQSxNQUFNLElBQUlDLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQkosU0FBcEIsQ0FBVjtBQUNBLFNBQU9FLE1BQVA7QUFDSDs7QUFDRFAsT0FBTyxDQUFDTSxPQUFSLEdBQWtCRixlQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGRlY29kZV9qc29uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbWFwcy9kZWNvZGUuanNvblwiKSk7XG4vLyBtb2RpZmllZCB2ZXJzaW9uIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoaWFzYnluZW5zL2hlL2Jsb2IvbWFzdGVyL3NyYy9oZS5qcyNMOTQtTDExOVxuZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50KGNvZGVQb2ludCkge1xuICAgIGlmICgoY29kZVBvaW50ID49IDB4ZDgwMCAmJiBjb2RlUG9pbnQgPD0gMHhkZmZmKSB8fCBjb2RlUG9pbnQgPiAweDEwZmZmZikge1xuICAgICAgICByZXR1cm4gXCJcXHVGRkZEXCI7XG4gICAgfVxuICAgIGlmIChjb2RlUG9pbnQgaW4gZGVjb2RlX2pzb25fMS5kZWZhdWx0KSB7XG4gICAgICAgIGNvZGVQb2ludCA9IGRlY29kZV9qc29uXzEuZGVmYXVsdFtjb2RlUG9pbnRdO1xuICAgIH1cbiAgICB2YXIgb3V0cHV0ID0gXCJcIjtcbiAgICBpZiAoY29kZVBvaW50ID4gMHhmZmZmKSB7XG4gICAgICAgIGNvZGVQb2ludCAtPSAweDEwMDAwO1xuICAgICAgICBvdXRwdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoKGNvZGVQb2ludCA+Pj4gMTApICYgMHgzZmYpIHwgMHhkODAwKTtcbiAgICAgICAgY29kZVBvaW50ID0gMHhkYzAwIHwgKGNvZGVQb2ludCAmIDB4M2ZmKTtcbiAgICB9XG4gICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZVBvaW50KTtcbiAgICByZXR1cm4gb3V0cHV0O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZGVjb2RlQ29kZVBvaW50O1xuIl19