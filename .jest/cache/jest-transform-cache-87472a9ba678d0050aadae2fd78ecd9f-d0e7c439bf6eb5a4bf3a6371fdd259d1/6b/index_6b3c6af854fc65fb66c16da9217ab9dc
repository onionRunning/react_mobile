63033ccf7bbc8a75ae019a5916194875
'use strict';

var fnToStr = Function.prototype.toString;
var constructorRegex = /^\s*class\b/;

var isES6ClassFn = function isES6ClassFunction(value) {
  try {
    var fnStr = fnToStr.call(value);
    return constructorRegex.test(fnStr);
  } catch (e) {
    return false; // not a function
  }
};

var tryFunctionObject = function tryFunctionToStr(value) {
  try {
    if (isES6ClassFn(value)) {
      return false;
    }

    fnToStr.call(value);
    return true;
  } catch (e) {
    return false;
  }
};

var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isCallable(value) {
  if (!value) {
    return false;
  }

  if (typeof value !== 'function' && typeof value !== 'object') {
    return false;
  }

  if (typeof value === 'function' && !value.prototype) {
    return true;
  }

  if (hasToStringTag) {
    return tryFunctionObject(value);
  }

  if (isES6ClassFn(value)) {
    return false;
  }

  var strClass = toStr.call(value);
  return strClass === fnClass || strClass === genClass;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZuVG9TdHIiLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY29uc3RydWN0b3JSZWdleCIsImlzRVM2Q2xhc3NGbiIsImlzRVM2Q2xhc3NGdW5jdGlvbiIsInZhbHVlIiwiZm5TdHIiLCJjYWxsIiwidGVzdCIsImUiLCJ0cnlGdW5jdGlvbk9iamVjdCIsInRyeUZ1bmN0aW9uVG9TdHIiLCJ0b1N0ciIsIk9iamVjdCIsImZuQ2xhc3MiLCJnZW5DbGFzcyIsImhhc1RvU3RyaW5nVGFnIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNDYWxsYWJsZSIsInN0ckNsYXNzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsU0FBVCxDQUFtQkMsUUFBakM7QUFFQSxJQUFJQyxnQkFBZ0IsR0FBRyxhQUF2Qjs7QUFDQSxJQUFJQyxZQUFZLEdBQUcsU0FBU0Msa0JBQVQsQ0FBNEJDLEtBQTVCLEVBQW1DO0FBQ3JELE1BQUk7QUFDSCxRQUFJQyxLQUFLLEdBQUdSLE9BQU8sQ0FBQ1MsSUFBUixDQUFhRixLQUFiLENBQVo7QUFDQSxXQUFPSCxnQkFBZ0IsQ0FBQ00sSUFBakIsQ0FBc0JGLEtBQXRCLENBQVA7QUFDQSxHQUhELENBR0UsT0FBT0csQ0FBUCxFQUFVO0FBQ1gsV0FBTyxLQUFQLENBRFcsQ0FDRztBQUNkO0FBQ0QsQ0FQRDs7QUFTQSxJQUFJQyxpQkFBaUIsR0FBRyxTQUFTQyxnQkFBVCxDQUEwQk4sS0FBMUIsRUFBaUM7QUFDeEQsTUFBSTtBQUNILFFBQUlGLFlBQVksQ0FBQ0UsS0FBRCxDQUFoQixFQUF5QjtBQUFFLGFBQU8sS0FBUDtBQUFlOztBQUMxQ1AsSUFBQUEsT0FBTyxDQUFDUyxJQUFSLENBQWFGLEtBQWI7QUFDQSxXQUFPLElBQVA7QUFDQSxHQUpELENBSUUsT0FBT0ksQ0FBUCxFQUFVO0FBQ1gsV0FBTyxLQUFQO0FBQ0E7QUFDRCxDQVJEOztBQVNBLElBQUlHLEtBQUssR0FBR0MsTUFBTSxDQUFDYixTQUFQLENBQWlCQyxRQUE3QjtBQUNBLElBQUlhLE9BQU8sR0FBRyxtQkFBZDtBQUNBLElBQUlDLFFBQVEsR0FBRyw0QkFBZjtBQUNBLElBQUlDLGNBQWMsR0FBRyxPQUFPQyxNQUFQLEtBQWtCLFVBQWxCLElBQWdDLE9BQU9BLE1BQU0sQ0FBQ0MsV0FBZCxLQUE4QixRQUFuRjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFVBQVQsQ0FBb0JoQixLQUFwQixFQUEyQjtBQUMzQyxNQUFJLENBQUNBLEtBQUwsRUFBWTtBQUFFLFdBQU8sS0FBUDtBQUFlOztBQUM3QixNQUFJLE9BQU9BLEtBQVAsS0FBaUIsVUFBakIsSUFBK0IsT0FBT0EsS0FBUCxLQUFpQixRQUFwRCxFQUE4RDtBQUFFLFdBQU8sS0FBUDtBQUFlOztBQUMvRSxNQUFJLE9BQU9BLEtBQVAsS0FBaUIsVUFBakIsSUFBK0IsQ0FBQ0EsS0FBSyxDQUFDTCxTQUExQyxFQUFxRDtBQUFFLFdBQU8sSUFBUDtBQUFjOztBQUNyRSxNQUFJZ0IsY0FBSixFQUFvQjtBQUFFLFdBQU9OLGlCQUFpQixDQUFDTCxLQUFELENBQXhCO0FBQWtDOztBQUN4RCxNQUFJRixZQUFZLENBQUNFLEtBQUQsQ0FBaEIsRUFBeUI7QUFBRSxXQUFPLEtBQVA7QUFBZTs7QUFDMUMsTUFBSWlCLFFBQVEsR0FBR1YsS0FBSyxDQUFDTCxJQUFOLENBQVdGLEtBQVgsQ0FBZjtBQUNBLFNBQU9pQixRQUFRLEtBQUtSLE9BQWIsSUFBd0JRLFFBQVEsS0FBS1AsUUFBNUM7QUFDQSxDQVJEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZm5Ub1N0ciA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztcblxudmFyIGNvbnN0cnVjdG9yUmVnZXggPSAvXlxccypjbGFzc1xcYi87XG52YXIgaXNFUzZDbGFzc0ZuID0gZnVuY3Rpb24gaXNFUzZDbGFzc0Z1bmN0aW9uKHZhbHVlKSB7XG5cdHRyeSB7XG5cdFx0dmFyIGZuU3RyID0gZm5Ub1N0ci5jYWxsKHZhbHVlKTtcblx0XHRyZXR1cm4gY29uc3RydWN0b3JSZWdleC50ZXN0KGZuU3RyKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTsgLy8gbm90IGEgZnVuY3Rpb25cblx0fVxufTtcblxudmFyIHRyeUZ1bmN0aW9uT2JqZWN0ID0gZnVuY3Rpb24gdHJ5RnVuY3Rpb25Ub1N0cih2YWx1ZSkge1xuXHR0cnkge1xuXHRcdGlmIChpc0VTNkNsYXNzRm4odmFsdWUpKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdGZuVG9TdHIuY2FsbCh2YWx1ZSk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn07XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGZuQ2xhc3MgPSAnW29iamVjdCBGdW5jdGlvbl0nO1xudmFyIGdlbkNsYXNzID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJztcbnZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyA9PT0gJ3N5bWJvbCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYWxsYWJsZSh2YWx1ZSkge1xuXHRpZiAoIXZhbHVlKSB7IHJldHVybiBmYWxzZTsgfVxuXHRpZiAodHlwZW9mIHZhbHVlICE9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicgJiYgIXZhbHVlLnByb3RvdHlwZSkgeyByZXR1cm4gdHJ1ZTsgfVxuXHRpZiAoaGFzVG9TdHJpbmdUYWcpIHsgcmV0dXJuIHRyeUZ1bmN0aW9uT2JqZWN0KHZhbHVlKTsgfVxuXHRpZiAoaXNFUzZDbGFzc0ZuKHZhbHVlKSkgeyByZXR1cm4gZmFsc2U7IH1cblx0dmFyIHN0ckNsYXNzID0gdG9TdHIuY2FsbCh2YWx1ZSk7XG5cdHJldHVybiBzdHJDbGFzcyA9PT0gZm5DbGFzcyB8fCBzdHJDbGFzcyA9PT0gZ2VuQ2xhc3M7XG59O1xuIl19