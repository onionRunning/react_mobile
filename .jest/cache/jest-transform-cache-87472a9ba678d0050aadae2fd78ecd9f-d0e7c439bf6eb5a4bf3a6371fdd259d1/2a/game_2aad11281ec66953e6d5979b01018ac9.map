{"version":3,"file":"/Users/wangcong/workspace/hl/font/react_mobile/src/stores/game.ts","sources":["/Users/wangcong/workspace/hl/font/react_mobile/src/stores/game.ts"],"names":[],"mappings":"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","sourcesContent":["import { observable } from 'mobx'\nimport { IdiomLists, WorldItem, Rewards } from 'interface/game'\nimport api from 'api'\nimport { getRandomSeed, getRandomWorld, randomArray, generateRandom, isString } from 'global/utils'\nimport { INIT_IDIOS } from 'global/const'\n\nconst INIT_LEVEL = 0\nconst ZERO = 0\nconst IDIOM_LENGTH = 4\nconst ONE = 1\nconst INIT_COINS = 100\nconst ADD_RANGE = 5\nconst REDUCE_RANGE = -3\nconst ALL_LEVEL = 1200\n\nconst TYPES = {\n  FILL: 'fill',\n  EMPTY: 'empty',\n  INIT: 'init',\n  ERR: 'error',\n}\nclass GameStore {\n  // 成语列表 后端返回\n  @observable idiomLists: IdiomLists[] = []\n  // 当前关卡的文字列表\n  @observable worldLists: WorldItem[] = []\n  // 四字的成语展示栏\n  @observable idiomWorld: WorldItem[] = INIT_IDIOS\n  // 展示成功输入成功后的弹窗\n  @observable isShowPop = false\n  // 当前等级\n  @observable currentLevel = INIT_LEVEL\n  // 当前金额\n  @observable coins = INIT_COINS\n  // 展示当前金币变化等级\n  @observable rangeCoins = REDUCE_RANGE\n  // 展示成就模块\n  @observable showAchievement = false\n  // 成就页面展示的信息\n  @observable achievementInfo: Rewards = {}\n  // 通关的次数(预留)\n  @observable passNumber = INIT_LEVEL\n  // 临时变量储存随机的文字列表\n  @observable randomWorlds: string[] = []\n  // 页面加载执行的函数\n  didMount = async() => {\n    this.initLevel()\n    this.initConins()\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    await this.setIdiomValue()\n    this.getRandomWorlds(ZERO)\n    this.initWorld()\n  }\n  // 页面离开时执行函数\n  willUnMount = () => {\n    this.initAllInfo()\n  }\n  // 更新通关次数\n  updatePassNum = () => {\n    const nums = localStorage.getItem('pass_num')!\n    let isRightNum = false\n    if (isString(nums) && nums !== 'NaN') {\n      isRightNum = true\n    }\n    this.passNumber =  parseInt(isRightNum ? nums : INIT_LEVEL.toString(), 10) + ONE\n  }\n  // 初始化等级\n  initLevel = () => {\n    const level = localStorage.getItem('level')!\n    let isRightLevel = false\n    if (isString(level) && level !== 'NaN') {\n      isRightLevel = true\n    }\n    this.currentLevel = parseInt(isRightLevel ? level : INIT_LEVEL.toString(), 10)\n  }\n  // 初始化金额\n  initConins = () => {\n    const storageCoins = localStorage.getItem('coins')!\n    let isRightCoins = false\n    if (isString(storageCoins) && storageCoins !== 'NaN') {\n      isRightCoins = true\n    }\n    this.coins = parseInt(isRightCoins ? storageCoins : INIT_COINS.toString(), 10)\n  }\n  // 储存等级\n  saveLevel = (l: number) => {\n    localStorage.setItem('level', l.toString())\n  }\n  // 获取随机当前关卡的下一关文字变量\n  getRandomWorlds = (step = ONE) => {\n    if(this.currentLevel === ALL_LEVEL - ONE) {\n      step = ZERO\n    }\n    const initIdiom = this.idiomLists[this.currentLevel + step].name\n    const temp = [...getRandomWorld(getRandomSeed()), ...initIdiom.split('')]\n    this.randomWorlds = randomArray(temp, getRandomSeed())\n  }\n  // 初始化文字列表信息\n  initWorld = () => {\n    const randomArr = [...this.randomWorlds]\n    this.worldLists = randomArr.map((item, index) => {\n      return { value: item, types: TYPES.FILL, id: index }\n    })\n  }\n  // 更新文字信息列表显示状态(文字列表点击更新为空, 成语展示显示)\n  uodateWorld = (id: number) => {\n    if (this.checkUpdate()) return\n    const temp = [...this.worldLists]\n    const values = temp.map((item, index) => {\n      if (index === id) {\n        return { ...item, types: TYPES.EMPTY, id: index }\n      }\n      return { ...item, id: index }\n    })\n    this.worldLists = values\n    this.updateIdiom(values, id)\n  }\n  // 更新文字状态\n  changeWorldStatus = (id: number) => {\n    const temp = [...this.worldLists]\n    temp[id] = { ...temp[id], types: TYPES.FILL }\n    this.worldLists = temp\n  }\n  // check empty个数不能大于4\n  checkUpdate = () => {\n    return (\n      this.worldLists.filter(item => {\n        return item.types === 'empty'\n      }).length >= IDIOM_LENGTH\n    )\n  }\n  // 更新展示成语列表 找到第一个为空的 value值并且赋值\n  updateIdiom = (data: WorldItem[], index: number) => {\n    const temp = [...this.idiomWorld]\n    const values = temp.findIndex(item => {\n      return item.value === ''\n    })\n    temp[values] = { ...data[index], types: TYPES.FILL }\n    const validLength = temp.filter(item => {\n      return item.value !== ''\n    }).length\n    if (validLength === IDIOM_LENGTH) {\n      this.checkIdiomStatus(temp)\n      return\n    }\n    this.idiomWorld = temp\n  }\n  // 判断当前的四字成语成功(提示弹窗出现) 还是失败(显示红色报错)\n  checkIdiomStatus = (data: WorldItem[]) => {\n    const choseIdiomValue = data.reduce((current, pre) => {\n      return (current += pre.value)\n    }, '')\n    if (choseIdiomValue === this.idiomLists[this.currentLevel].name) {\n      this.idiomWorld = [...data]\n      // 成功后的逻辑\n      this.isShowPop = true\n      this.getRandomWorlds() // 把下一关的随机文字先准备好\n      this.updateCoins(ADD_RANGE)\n    } else {\n      this.idiomWorld = [...data].map(item => {\n        return { ...item, types: TYPES.ERR }\n      })\n    }\n  }\n  // 移除成语点击\n  removeIdiom = (id: number, index: number) => {\n    let temp = [...this.idiomWorld]\n    // 用于把错误状态进行重置\n    const validLength = temp.filter(item => {\n      return item.types === TYPES.ERR\n    }).length\n    if (validLength === IDIOM_LENGTH) {\n      temp = temp.map(item => {\n        return { ...item, types: TYPES.FILL }\n      })\n    }\n    temp[index] = { value: '', types: TYPES.INIT }\n    this.idiomWorld = temp\n    this.changeWorldStatus(id)\n  }\n  // 更新等级\n  updateLevel = (l: number) => {\n    this.currentLevel = l\n  }\n\n  // 初始化成语列表\n  setIdiomValue = async() => {\n    const res = await api.getIdioms()\n    if (res.success) {\n      this.idiomLists = res.data.chengyu\n    }\n    return res.success\n  }\n  // 成语 和文字信息 清回归最初状态\n  initWorldAndIdiom = () => {\n    this.idiomWorld = [...INIT_IDIOS]\n    this.worldLists = [...this.worldLists].map(item => {\n      return { ...item, types: TYPES.FILL }\n    })\n  }\n  // 减少/增加 金额\n  updateCoins = (range: number) => {\n    this.coins = this.coins + range\n    this.rangeCoins = range\n    localStorage.setItem('coins', this.coins.toString())\n  }\n  // 点击获取提示按钮()1. 更新2份数据源 2. 更新金额 3. check 限制\n  getTips = () => {\n    if (this.checkClick()) return\n    this.tipUpdateIdioms()\n    this.updateCoins(REDUCE_RANGE)\n  }\n  checkClick = () => {\n    const temp = [...this.idiomWorld]\n    return (\n      temp.filter(item => {\n        return item.value !== ''\n      }).length >= IDIOM_LENGTH\n    )\n  }\n  // 提示更新展示的world\n  tipUpdateWorld = (str: string) => {\n    const temp = [...this.worldLists].map(item => {\n      if (item.value === str) {\n        return { ...item, types: TYPES.EMPTY }\n      }\n      return item\n    })\n    this.worldLists = temp\n  }\n  // 提示情况下更新成语展示\n  tipUpdateIdioms = () => {\n    const temp = [...this.idiomWorld]\n    const emptyIndexArr = temp\n      .map((item, index) => {\n        if (item.value === '') {\n          return index\n        }\n        return ''\n      })\n      .filter(i => {\n        return i !== ''\n      }) as number[]\n    const idiomArr = this.idiomLists[this.currentLevel].name.split('')\n    if (emptyIndexArr.length === ONE) {\n      temp[emptyIndexArr[ZERO]!] = {\n        ...temp[emptyIndexArr[ZERO]!],\n        value: idiomArr[emptyIndexArr[ZERO]!],\n        types: TYPES.FILL,\n      }\n      this.tipUpdateWorld(idiomArr[emptyIndexArr[ZERO]!])\n      this.checkIdiomStatus(temp)\n      return\n    }\n    // 如果长度大于 1 需要进行随机处理\n    const radoms = generateRandom(getRandomSeed())(ZERO, emptyIndexArr.length)\n    temp[emptyIndexArr[radoms]!] = {\n      ...temp[emptyIndexArr[radoms]!],\n      value: idiomArr[emptyIndexArr[radoms]!],\n      types: TYPES.FILL,\n    }\n    this.tipUpdateWorld(idiomArr[emptyIndexArr[radoms]!])\n    this.idiomWorld = temp\n  }\n  // 更新新的题目\n  updateNextIdioms = (l = ONE) => {\n    this.updateLevel(this.currentLevel + l)\n    this.saveLevel(this.currentLevel)\n    this.isShowPop = false\n    this.initWorld()\n    this.idiomWorld = [...INIT_IDIOS]\n  }\n  // 初始化信息\n  initAllInfo = () => {\n    this.isShowPop = false\n    this.initWorldAndIdiom()\n    this.handleAchievement(false, {})\n  }\n  // 成就相关逻辑\n  handleAchievement = (s: boolean, info: Rewards) => {\n    this.updateAchievementStatus(s)\n    this.updateAchievementInfo(info)\n  }\n  // 打开或关闭成就模块\n  updateAchievementStatus = (status: boolean) => {\n    this.showAchievement = status\n  }\n  // 更新成就相关信息\n  updateAchievementInfo = (info: Rewards) => {\n    this.achievementInfo = info\n  }\n}\nexport default GameStore\n\n// 注意联动逻辑的处理 数据A更新 -> 更新B // 数据B更新 -> 数据A\n"]}