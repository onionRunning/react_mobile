b4cdfbf934906ef36aebf001849a0ca5
'use strict';

var GetIntrinsic = require('../GetIntrinsic');

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

if ($defineProperty) {
  try {
    $defineProperty({}, 'a', {
      value: 1
    });
  } catch (e) {
    // IE 8 has a broken defineProperty
    $defineProperty = null;
  }
}

var callBound = require('../helpers/callBound');

var $isEnumerable = callBound('Object.prototype.propertyIsEnumerable'); // eslint-disable-next-line max-params

module.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {
  if (!$defineProperty) {
    if (!IsDataDescriptor(desc)) {
      // ES3 does not support getters/setters
      return false;
    }

    if (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {
      return false;
    } // fallback for ES3


    if (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {
      // a non-enumerable existing property
      return false;
    } // property does not exist at all, or exists but is enumerable


    var V = desc['[[Value]]']; // eslint-disable-next-line no-param-reassign

    O[P] = V; // will use [[Define]]

    return SameValue(O[P], V);
  }

  $defineProperty(O, P, FromPropertyDescriptor(desc));
  return true;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlZmluZU93blByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIkdldEludHJpbnNpYyIsInJlcXVpcmUiLCIkZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImUiLCJjYWxsQm91bmQiLCIkaXNFbnVtZXJhYmxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIkRlZmluZU93blByb3BlcnR5IiwiSXNEYXRhRGVzY3JpcHRvciIsIlNhbWVWYWx1ZSIsIkZyb21Qcm9wZXJ0eURlc2NyaXB0b3IiLCJPIiwiUCIsImRlc2MiLCJWIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFFQSxJQUFJQyxlQUFlLEdBQUdGLFlBQVksQ0FBQyx5QkFBRCxFQUE0QixJQUE1QixDQUFsQzs7QUFFQSxJQUFJRSxlQUFKLEVBQXFCO0FBQ3BCLE1BQUk7QUFDSEEsSUFBQUEsZUFBZSxDQUFDLEVBQUQsRUFBSyxHQUFMLEVBQVU7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQVQsS0FBVixDQUFmO0FBQ0EsR0FGRCxDQUVFLE9BQU9DLENBQVAsRUFBVTtBQUNYO0FBQ0FGLElBQUFBLGVBQWUsR0FBRyxJQUFsQjtBQUNBO0FBQ0Q7O0FBRUQsSUFBSUcsU0FBUyxHQUFHSixPQUFPLENBQUMsc0JBQUQsQ0FBdkI7O0FBRUEsSUFBSUssYUFBYSxHQUFHRCxTQUFTLENBQUMsdUNBQUQsQ0FBN0IsQyxDQUVBOztBQUNBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsaUJBQVQsQ0FBMkJDLGdCQUEzQixFQUE2Q0MsU0FBN0MsRUFBd0RDLHNCQUF4RCxFQUFnRkMsQ0FBaEYsRUFBbUZDLENBQW5GLEVBQXNGQyxJQUF0RixFQUE0RjtBQUM1RyxNQUFJLENBQUNiLGVBQUwsRUFBc0I7QUFDckIsUUFBSSxDQUFDUSxnQkFBZ0IsQ0FBQ0ssSUFBRCxDQUFyQixFQUE2QjtBQUM1QjtBQUNBLGFBQU8sS0FBUDtBQUNBOztBQUNELFFBQUksQ0FBQ0EsSUFBSSxDQUFDLGtCQUFELENBQUwsSUFBNkIsQ0FBQ0EsSUFBSSxDQUFDLGNBQUQsQ0FBdEMsRUFBd0Q7QUFDdkQsYUFBTyxLQUFQO0FBQ0EsS0FQb0IsQ0FTckI7OztBQUNBLFFBQUlELENBQUMsSUFBSUQsQ0FBTCxJQUFVUCxhQUFhLENBQUNPLENBQUQsRUFBSUMsQ0FBSixDQUFiLEtBQXdCLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLGdCQUFELENBQTVDLEVBQWdFO0FBQy9EO0FBQ0EsYUFBTyxLQUFQO0FBQ0EsS0Fib0IsQ0FlckI7OztBQUNBLFFBQUlDLENBQUMsR0FBR0QsSUFBSSxDQUFDLFdBQUQsQ0FBWixDQWhCcUIsQ0FpQnJCOztBQUNBRixJQUFBQSxDQUFDLENBQUNDLENBQUQsQ0FBRCxHQUFPRSxDQUFQLENBbEJxQixDQWtCWDs7QUFDVixXQUFPTCxTQUFTLENBQUNFLENBQUMsQ0FBQ0MsQ0FBRCxDQUFGLEVBQU9FLENBQVAsQ0FBaEI7QUFDQTs7QUFDRGQsRUFBQUEsZUFBZSxDQUFDVyxDQUFELEVBQUlDLENBQUosRUFBT0Ysc0JBQXNCLENBQUNHLElBQUQsQ0FBN0IsQ0FBZjtBQUNBLFNBQU8sSUFBUDtBQUNBLENBeEJEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnLi4vR2V0SW50cmluc2ljJyk7XG5cbnZhciAkZGVmaW5lUHJvcGVydHkgPSBHZXRJbnRyaW5zaWMoJyVPYmplY3QuZGVmaW5lUHJvcGVydHklJywgdHJ1ZSk7XG5cbmlmICgkZGVmaW5lUHJvcGVydHkpIHtcblx0dHJ5IHtcblx0XHQkZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyB2YWx1ZTogMSB9KTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdC8vIElFIDggaGFzIGEgYnJva2VuIGRlZmluZVByb3BlcnR5XG5cdFx0JGRlZmluZVByb3BlcnR5ID0gbnVsbDtcblx0fVxufVxuXG52YXIgY2FsbEJvdW5kID0gcmVxdWlyZSgnLi4vaGVscGVycy9jYWxsQm91bmQnKTtcblxudmFyICRpc0VudW1lcmFibGUgPSBjYWxsQm91bmQoJ09iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1wYXJhbXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gRGVmaW5lT3duUHJvcGVydHkoSXNEYXRhRGVzY3JpcHRvciwgU2FtZVZhbHVlLCBGcm9tUHJvcGVydHlEZXNjcmlwdG9yLCBPLCBQLCBkZXNjKSB7XG5cdGlmICghJGRlZmluZVByb3BlcnR5KSB7XG5cdFx0aWYgKCFJc0RhdGFEZXNjcmlwdG9yKGRlc2MpKSB7XG5cdFx0XHQvLyBFUzMgZG9lcyBub3Qgc3VwcG9ydCBnZXR0ZXJzL3NldHRlcnNcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0aWYgKCFkZXNjWydbW0NvbmZpZ3VyYWJsZV1dJ10gfHwgIWRlc2NbJ1tbV3JpdGFibGVdXSddKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gZmFsbGJhY2sgZm9yIEVTM1xuXHRcdGlmIChQIGluIE8gJiYgJGlzRW51bWVyYWJsZShPLCBQKSAhPT0gISFkZXNjWydbW0VudW1lcmFibGVdXSddKSB7XG5cdFx0XHQvLyBhIG5vbi1lbnVtZXJhYmxlIGV4aXN0aW5nIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gcHJvcGVydHkgZG9lcyBub3QgZXhpc3QgYXQgYWxsLCBvciBleGlzdHMgYnV0IGlzIGVudW1lcmFibGVcblx0XHR2YXIgViA9IGRlc2NbJ1tbVmFsdWVdXSddO1xuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuXHRcdE9bUF0gPSBWOyAvLyB3aWxsIHVzZSBbW0RlZmluZV1dXG5cdFx0cmV0dXJuIFNhbWVWYWx1ZShPW1BdLCBWKTtcblx0fVxuXHQkZGVmaW5lUHJvcGVydHkoTywgUCwgRnJvbVByb3BlcnR5RGVzY3JpcHRvcihkZXNjKSk7XG5cdHJldHVybiB0cnVlO1xufTtcbiJdfQ==