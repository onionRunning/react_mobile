40620ce13ab1e755dd8ecfe594035592
'use strict';

var GetIntrinsic = require('../GetIntrinsic');

var IsInteger = require('./IsInteger');

var Type = require('./Type');

var MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');

var $TypeError = GetIntrinsic('%TypeError%');

var $charCodeAt = require('../helpers/callBound')('String.prototype.charCodeAt'); // https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex


module.exports = function AdvanceStringIndex(S, index, unicode) {
  if (Type(S) !== 'String') {
    throw new $TypeError('Assertion failed: `S` must be a String');
  }

  if (!IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {
    throw new $TypeError('Assertion failed: `length` must be an integer >= 0 and <= 2**53');
  }

  if (Type(unicode) !== 'Boolean') {
    throw new $TypeError('Assertion failed: `unicode` must be a Boolean');
  }

  if (!unicode) {
    return index + 1;
  }

  var length = S.length;

  if (index + 1 >= length) {
    return index + 1;
  }

  var first = $charCodeAt(S, index);

  if (first < 0xD800 || first > 0xDBFF) {
    return index + 1;
  }

  var second = $charCodeAt(S, index + 1);

  if (second < 0xDC00 || second > 0xDFFF) {
    return index + 1;
  }

  return index + 2;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkdmFuY2VTdHJpbmdJbmRleC5qcyJdLCJuYW1lcyI6WyJHZXRJbnRyaW5zaWMiLCJyZXF1aXJlIiwiSXNJbnRlZ2VyIiwiVHlwZSIsIk1BWF9TQUZFX0lOVEVHRVIiLCIkVHlwZUVycm9yIiwiJGNoYXJDb2RlQXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiQWR2YW5jZVN0cmluZ0luZGV4IiwiUyIsImluZGV4IiwidW5pY29kZSIsImxlbmd0aCIsImZpcnN0Iiwic2Vjb25kIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFFQSxJQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXZCOztBQUNBLElBQUlFLElBQUksR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBbEI7O0FBRUEsSUFBSUcsZ0JBQWdCLEdBQUdILE9BQU8sQ0FBQywyQkFBRCxDQUE5Qjs7QUFFQSxJQUFJSSxVQUFVLEdBQUdMLFlBQVksQ0FBQyxhQUFELENBQTdCOztBQUVBLElBQUlNLFdBQVcsR0FBR0wsT0FBTyxDQUFDLHNCQUFELENBQVAsQ0FBZ0MsNkJBQWhDLENBQWxCLEMsQ0FFQTs7O0FBRUFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxrQkFBVCxDQUE0QkMsQ0FBNUIsRUFBK0JDLEtBQS9CLEVBQXNDQyxPQUF0QyxFQUErQztBQUMvRCxNQUFJVCxJQUFJLENBQUNPLENBQUQsQ0FBSixLQUFZLFFBQWhCLEVBQTBCO0FBQ3pCLFVBQU0sSUFBSUwsVUFBSixDQUFlLHdDQUFmLENBQU47QUFDQTs7QUFDRCxNQUFJLENBQUNILFNBQVMsQ0FBQ1MsS0FBRCxDQUFWLElBQXFCQSxLQUFLLEdBQUcsQ0FBN0IsSUFBa0NBLEtBQUssR0FBR1AsZ0JBQTlDLEVBQWdFO0FBQy9ELFVBQU0sSUFBSUMsVUFBSixDQUFlLGlFQUFmLENBQU47QUFDQTs7QUFDRCxNQUFJRixJQUFJLENBQUNTLE9BQUQsQ0FBSixLQUFrQixTQUF0QixFQUFpQztBQUNoQyxVQUFNLElBQUlQLFVBQUosQ0FBZSwrQ0FBZixDQUFOO0FBQ0E7O0FBQ0QsTUFBSSxDQUFDTyxPQUFMLEVBQWM7QUFDYixXQUFPRCxLQUFLLEdBQUcsQ0FBZjtBQUNBOztBQUNELE1BQUlFLE1BQU0sR0FBR0gsQ0FBQyxDQUFDRyxNQUFmOztBQUNBLE1BQUtGLEtBQUssR0FBRyxDQUFULElBQWVFLE1BQW5CLEVBQTJCO0FBQzFCLFdBQU9GLEtBQUssR0FBRyxDQUFmO0FBQ0E7O0FBRUQsTUFBSUcsS0FBSyxHQUFHUixXQUFXLENBQUNJLENBQUQsRUFBSUMsS0FBSixDQUF2Qjs7QUFDQSxNQUFJRyxLQUFLLEdBQUcsTUFBUixJQUFrQkEsS0FBSyxHQUFHLE1BQTlCLEVBQXNDO0FBQ3JDLFdBQU9ILEtBQUssR0FBRyxDQUFmO0FBQ0E7O0FBRUQsTUFBSUksTUFBTSxHQUFHVCxXQUFXLENBQUNJLENBQUQsRUFBSUMsS0FBSyxHQUFHLENBQVosQ0FBeEI7O0FBQ0EsTUFBSUksTUFBTSxHQUFHLE1BQVQsSUFBbUJBLE1BQU0sR0FBRyxNQUFoQyxFQUF3QztBQUN2QyxXQUFPSixLQUFLLEdBQUcsQ0FBZjtBQUNBOztBQUVELFNBQU9BLEtBQUssR0FBRyxDQUFmO0FBQ0EsQ0E3QkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCcuLi9HZXRJbnRyaW5zaWMnKTtcblxudmFyIElzSW50ZWdlciA9IHJlcXVpcmUoJy4vSXNJbnRlZ2VyJyk7XG52YXIgVHlwZSA9IHJlcXVpcmUoJy4vVHlwZScpO1xuXG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvbWF4U2FmZUludGVnZXInKTtcblxudmFyICRUeXBlRXJyb3IgPSBHZXRJbnRyaW5zaWMoJyVUeXBlRXJyb3IlJyk7XG5cbnZhciAkY2hhckNvZGVBdCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvY2FsbEJvdW5kJykoJ1N0cmluZy5wcm90b3R5cGUuY2hhckNvZGVBdCcpO1xuXG4vLyBodHRwczovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtYWR2YW5jZXN0cmluZ2luZGV4XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gQWR2YW5jZVN0cmluZ0luZGV4KFMsIGluZGV4LCB1bmljb2RlKSB7XG5cdGlmIChUeXBlKFMpICE9PSAnU3RyaW5nJykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBgU2AgbXVzdCBiZSBhIFN0cmluZycpO1xuXHR9XG5cdGlmICghSXNJbnRlZ2VyKGluZGV4KSB8fCBpbmRleCA8IDAgfHwgaW5kZXggPiBNQVhfU0FGRV9JTlRFR0VSKSB7XG5cdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IGBsZW5ndGhgIG11c3QgYmUgYW4gaW50ZWdlciA+PSAwIGFuZCA8PSAyKio1MycpO1xuXHR9XG5cdGlmIChUeXBlKHVuaWNvZGUpICE9PSAnQm9vbGVhbicpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogYHVuaWNvZGVgIG11c3QgYmUgYSBCb29sZWFuJyk7XG5cdH1cblx0aWYgKCF1bmljb2RlKSB7XG5cdFx0cmV0dXJuIGluZGV4ICsgMTtcblx0fVxuXHR2YXIgbGVuZ3RoID0gUy5sZW5ndGg7XG5cdGlmICgoaW5kZXggKyAxKSA+PSBsZW5ndGgpIHtcblx0XHRyZXR1cm4gaW5kZXggKyAxO1xuXHR9XG5cblx0dmFyIGZpcnN0ID0gJGNoYXJDb2RlQXQoUywgaW5kZXgpO1xuXHRpZiAoZmlyc3QgPCAweEQ4MDAgfHwgZmlyc3QgPiAweERCRkYpIHtcblx0XHRyZXR1cm4gaW5kZXggKyAxO1xuXHR9XG5cblx0dmFyIHNlY29uZCA9ICRjaGFyQ29kZUF0KFMsIGluZGV4ICsgMSk7XG5cdGlmIChzZWNvbmQgPCAweERDMDAgfHwgc2Vjb25kID4gMHhERkZGKSB7XG5cdFx0cmV0dXJuIGluZGV4ICsgMTtcblx0fVxuXG5cdHJldHVybiBpbmRleCArIDI7XG59O1xuIl19