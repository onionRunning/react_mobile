ff5bdc9f3d0b14ab03fac103a1753d3a
'use strict';

var hasSymbols = require('has-symbols')();

var GetIntrinsic = require('../GetIntrinsic');

var callBound = require('./callBound');

var $iterator = GetIntrinsic('%Symbol.iterator%', true);
var $stringSlice = callBound('String.prototype.slice');

module.exports = function getIteratorMethod(ES, iterable) {
  var usingIterator;

  if (hasSymbols) {
    usingIterator = ES.GetMethod(iterable, $iterator);
  } else if (ES.IsArray(iterable)) {
    usingIterator = function () {
      var i = -1;
      var arr = this; // eslint-disable-line no-invalid-this

      return {
        next: function () {
          i += 1;
          return {
            done: i >= arr.length,
            value: arr[i]
          };
        }
      };
    };
  } else if (ES.Type(iterable) === 'String') {
    usingIterator = function () {
      var i = 0;
      return {
        next: function () {
          var nextIndex = ES.AdvanceStringIndex(iterable, i, true);
          var value = $stringSlice(iterable, i, nextIndex);
          i = nextIndex;
          return {
            done: nextIndex > iterable.length,
            value: value
          };
        }
      };
    };
  }

  return usingIterator;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEl0ZXJhdG9yTWV0aG9kLmpzIl0sIm5hbWVzIjpbImhhc1N5bWJvbHMiLCJyZXF1aXJlIiwiR2V0SW50cmluc2ljIiwiY2FsbEJvdW5kIiwiJGl0ZXJhdG9yIiwiJHN0cmluZ1NsaWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldEl0ZXJhdG9yTWV0aG9kIiwiRVMiLCJpdGVyYWJsZSIsInVzaW5nSXRlcmF0b3IiLCJHZXRNZXRob2QiLCJJc0FycmF5IiwiaSIsImFyciIsIm5leHQiLCJkb25lIiwibGVuZ3RoIiwidmFsdWUiLCJUeXBlIiwibmV4dEluZGV4IiwiQWR2YW5jZVN0cmluZ0luZGV4Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQVAsRUFBakI7O0FBQ0EsSUFBSUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsaUJBQUQsQ0FBMUI7O0FBQ0EsSUFBSUUsU0FBUyxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUF2Qjs7QUFFQSxJQUFJRyxTQUFTLEdBQUdGLFlBQVksQ0FBQyxtQkFBRCxFQUFzQixJQUF0QixDQUE1QjtBQUNBLElBQUlHLFlBQVksR0FBR0YsU0FBUyxDQUFDLHdCQUFELENBQTVCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsaUJBQVQsQ0FBMkJDLEVBQTNCLEVBQStCQyxRQUEvQixFQUF5QztBQUN6RCxNQUFJQyxhQUFKOztBQUNBLE1BQUlYLFVBQUosRUFBZ0I7QUFDZlcsSUFBQUEsYUFBYSxHQUFHRixFQUFFLENBQUNHLFNBQUgsQ0FBYUYsUUFBYixFQUF1Qk4sU0FBdkIsQ0FBaEI7QUFDQSxHQUZELE1BRU8sSUFBSUssRUFBRSxDQUFDSSxPQUFILENBQVdILFFBQVgsQ0FBSixFQUEwQjtBQUNoQ0MsSUFBQUEsYUFBYSxHQUFHLFlBQVk7QUFDM0IsVUFBSUcsQ0FBQyxHQUFHLENBQUMsQ0FBVDtBQUNBLFVBQUlDLEdBQUcsR0FBRyxJQUFWLENBRjJCLENBRVg7O0FBQ2hCLGFBQU87QUFDTkMsUUFBQUEsSUFBSSxFQUFFLFlBQVk7QUFDakJGLFVBQUFBLENBQUMsSUFBSSxDQUFMO0FBQ0EsaUJBQU87QUFDTkcsWUFBQUEsSUFBSSxFQUFFSCxDQUFDLElBQUlDLEdBQUcsQ0FBQ0csTUFEVDtBQUVOQyxZQUFBQSxLQUFLLEVBQUVKLEdBQUcsQ0FBQ0QsQ0FBRDtBQUZKLFdBQVA7QUFJQTtBQVBLLE9BQVA7QUFTQSxLQVpEO0FBYUEsR0FkTSxNQWNBLElBQUlMLEVBQUUsQ0FBQ1csSUFBSCxDQUFRVixRQUFSLE1BQXNCLFFBQTFCLEVBQW9DO0FBQzFDQyxJQUFBQSxhQUFhLEdBQUcsWUFBWTtBQUMzQixVQUFJRyxDQUFDLEdBQUcsQ0FBUjtBQUNBLGFBQU87QUFDTkUsUUFBQUEsSUFBSSxFQUFFLFlBQVk7QUFDakIsY0FBSUssU0FBUyxHQUFHWixFQUFFLENBQUNhLGtCQUFILENBQXNCWixRQUF0QixFQUFnQ0ksQ0FBaEMsRUFBbUMsSUFBbkMsQ0FBaEI7QUFDQSxjQUFJSyxLQUFLLEdBQUdkLFlBQVksQ0FBQ0ssUUFBRCxFQUFXSSxDQUFYLEVBQWNPLFNBQWQsQ0FBeEI7QUFDQVAsVUFBQUEsQ0FBQyxHQUFHTyxTQUFKO0FBQ0EsaUJBQU87QUFDTkosWUFBQUEsSUFBSSxFQUFFSSxTQUFTLEdBQUdYLFFBQVEsQ0FBQ1EsTUFEckI7QUFFTkMsWUFBQUEsS0FBSyxFQUFFQTtBQUZELFdBQVA7QUFJQTtBQVRLLE9BQVA7QUFXQSxLQWJEO0FBY0E7O0FBQ0QsU0FBT1IsYUFBUDtBQUNBLENBbkNEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzU3ltYm9scyA9IHJlcXVpcmUoJ2hhcy1zeW1ib2xzJykoKTtcbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCcuLi9HZXRJbnRyaW5zaWMnKTtcbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCcuL2NhbGxCb3VuZCcpO1xuXG52YXIgJGl0ZXJhdG9yID0gR2V0SW50cmluc2ljKCclU3ltYm9sLml0ZXJhdG9yJScsIHRydWUpO1xudmFyICRzdHJpbmdTbGljZSA9IGNhbGxCb3VuZCgnU3RyaW5nLnByb3RvdHlwZS5zbGljZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldEl0ZXJhdG9yTWV0aG9kKEVTLCBpdGVyYWJsZSkge1xuXHR2YXIgdXNpbmdJdGVyYXRvcjtcblx0aWYgKGhhc1N5bWJvbHMpIHtcblx0XHR1c2luZ0l0ZXJhdG9yID0gRVMuR2V0TWV0aG9kKGl0ZXJhYmxlLCAkaXRlcmF0b3IpO1xuXHR9IGVsc2UgaWYgKEVTLklzQXJyYXkoaXRlcmFibGUpKSB7XG5cdFx0dXNpbmdJdGVyYXRvciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBpID0gLTE7XG5cdFx0XHR2YXIgYXJyID0gdGhpczsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1pbnZhbGlkLXRoaXNcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdG5leHQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRpICs9IDE7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdGRvbmU6IGkgPj0gYXJyLmxlbmd0aCxcblx0XHRcdFx0XHRcdHZhbHVlOiBhcnJbaV1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH07XG5cdH0gZWxzZSBpZiAoRVMuVHlwZShpdGVyYWJsZSkgPT09ICdTdHJpbmcnKSB7XG5cdFx0dXNpbmdJdGVyYXRvciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdG5leHQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHR2YXIgbmV4dEluZGV4ID0gRVMuQWR2YW5jZVN0cmluZ0luZGV4KGl0ZXJhYmxlLCBpLCB0cnVlKTtcblx0XHRcdFx0XHR2YXIgdmFsdWUgPSAkc3RyaW5nU2xpY2UoaXRlcmFibGUsIGksIG5leHRJbmRleCk7XG5cdFx0XHRcdFx0aSA9IG5leHRJbmRleDtcblx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0ZG9uZTogbmV4dEluZGV4ID4gaXRlcmFibGUubGVuZ3RoLFxuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9O1xuXHR9XG5cdHJldHVybiB1c2luZ0l0ZXJhdG9yO1xufTtcbiJdfQ==