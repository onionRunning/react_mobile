{"version":3,"sources":["../src/nonNegativeNumber.js"],"names":["isFinite","x","value","props","isNonNegative","nonNegativeNumber"],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEA,SAAA,aAAA,CAAA,CAAA,EAA0B;AACxB,SAAO,OAAA,CAAA,KAAA,QAAA,IAAyBA,QAAQ,CAAjC,CAAiC,CAAjC,IAAwCC,CAAC,IAAzC,CAAA,IAAkD,CAAC,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAM,CAAhE,CAA0D,CAA1D;AACD;;AAED,SAAA,iBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAA2D;AACzD,MAAMC,KAAK,GAAGC,KAAK,CAAnB,QAAmB,CAAnB;;AAEA,MAAID,KAAK,IAALA,IAAAA,IAAiBE,aAAa,CAAlC,KAAkC,CAAlC,EAA2C;AACzC,WAAA,IAAA;AACD;;AAED,SAAO,IAAA,UAAA,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,MAAA,EAAA,MAAA,CAAA,aAAA,EAAP,gCAAO,CAAA,CAAP;AACD;;AAED,SAAA,yBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAmE;AACjE,MAAMF,KAAK,GAAGC,KAAK,CAAnB,QAAmB,CAAnB;;AAEA,MAAIC,aAAa,CAAjB,KAAiB,CAAjB,EAA0B;AACxB,WAAA,IAAA;AACD;;AAED,SAAO,IAAA,UAAA,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,MAAA,EAAA,MAAA,CAAA,aAAA,EAAP,gCAAO,CAAA,CAAP;AACD;;AAEDC,iBAAiB,CAAjBA,UAAAA,GAAAA,yBAAAA;;eAEe,SAAA,QAAA,GAAA;AAAA,SAAM,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,iBAAA,EAAN,mBAAM,CAAN","sourcesContent":["import is from 'object-is';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction isNonNegative(x) {\n  return typeof x === 'number' && isFinite(x) && x >= 0 && !is(x, -0);\n}\n\nfunction nonNegativeNumber(props, propName, componentName) {\n  const value = props[propName];\n\n  if (value == null || isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(`${propName} in ${componentName} must be a non-negative number`);\n}\n\nfunction requiredNonNegativeNumber(props, propName, componentName) {\n  const value = props[propName];\n\n  if (isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(`${propName} in ${componentName} must be a non-negative number`);\n}\n\nnonNegativeNumber.isRequired = requiredNonNegativeNumber;\n\nexport default () => wrapValidator(nonNegativeNumber, 'nonNegativeNumber');\n"]}