{"version":3,"file":"/Users/wangcong/workspace/hl/font/react_mobile/src/setupTests.ts","sources":["/Users/wangcong/workspace/hl/font/react_mobile/src/setupTests.ts"],"names":[],"mappings":";;;;;AAAA,iCAAkC;AAClC,oFAA6C;AAE7C,kBAAS,CAAC,EAAE,OAAO,EAAE,IAAI,iCAAO,EAAE,EAAE,CAAC,CAAA;AAErC,IAAM,kBAAkB,GAAG;IACzB,IAAI,KAAK,GAAQ,EAAE,CAAA;IACnB,OAAO;QACL,OAAO,EAAE,UAAC,GAAW;YACnB,yEAAyE;YACzE,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAA;QAC3B,CAAC;QACD,OAAO,EAAE,UAAC,GAAW,EAAE,KAAa;YAClC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;QACpB,CAAC;QACD,KAAK,EAAE;YACL,KAAK,GAAG,EAAE,CAAA;QACZ,CAAC;KACF,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,cAAc,GAAG,kBAAkB,EAAa,CAAA","sourcesContent":["import { configure } from 'enzyme'\nimport Adapter from 'enzyme-adapter-react-16'\n\nconfigure({ adapter: new Adapter() })\n\nconst sessionStorageMock = () => {\n  let store: any = {}\n  return {\n    getItem: (key: string) => {\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      return store[key] || null\n    },\n    setItem: (key: string, value: string) => {\n      store[key] = value\n    },\n    clear: () => {\n      store = {}\n    },\n  }\n}\n\nglobal.sessionStorage = sessionStorageMock() as Storage\n"]}