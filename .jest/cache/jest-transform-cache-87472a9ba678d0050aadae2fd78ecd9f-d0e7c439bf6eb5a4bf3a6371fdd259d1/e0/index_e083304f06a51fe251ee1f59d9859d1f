225f81d86e42589334426f7adb05cafc
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var decode_1 = require("./decode");

var encode_1 = require("./encode");
/**
 * Decodes a string with entities.
 *
 * @param data String to decode.
 * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.
 */


function decode(data, level) {
  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);
}

exports.decode = decode;
/**
 * Decodes a string with entities. Does not allow missing trailing semicolons for entities.
 *
 * @param data String to decode.
 * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.
 */

function decodeStrict(data, level) {
  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);
}

exports.decodeStrict = decodeStrict;
/**
 * Encodes a string with entities.
 *
 * @param data String to encode.
 * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.
 */

function encode(data, level) {
  return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);
}

exports.encode = encode;

var encode_2 = require("./encode");

exports.encodeXML = encode_2.encodeXML;
exports.encodeHTML = encode_2.encodeHTML;
exports.escape = encode_2.escape; // Legacy aliases

exports.encodeHTML4 = encode_2.encodeHTML;
exports.encodeHTML5 = encode_2.encodeHTML;

var decode_2 = require("./decode");

exports.decodeXML = decode_2.decodeXML;
exports.decodeHTML = decode_2.decodeHTML;
exports.decodeHTMLStrict = decode_2.decodeHTMLStrict; // Legacy aliases

exports.decodeHTML4 = decode_2.decodeHTML;
exports.decodeHTML5 = decode_2.decodeHTML;
exports.decodeHTML4Strict = decode_2.decodeHTMLStrict;
exports.decodeHTML5Strict = decode_2.decodeHTMLStrict;
exports.decodeXMLStrict = decode_2.decodeXML;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlXzEiLCJyZXF1aXJlIiwiZW5jb2RlXzEiLCJkZWNvZGUiLCJkYXRhIiwibGV2ZWwiLCJkZWNvZGVYTUwiLCJkZWNvZGVIVE1MIiwiZGVjb2RlU3RyaWN0IiwiZGVjb2RlSFRNTFN0cmljdCIsImVuY29kZSIsImVuY29kZVhNTCIsImVuY29kZUhUTUwiLCJlbmNvZGVfMiIsImVzY2FwZSIsImVuY29kZUhUTUw0IiwiZW5jb2RlSFRNTDUiLCJkZWNvZGVfMiIsImRlY29kZUhUTUw0IiwiZGVjb2RlSFRNTDUiLCJkZWNvZGVIVE1MNFN0cmljdCIsImRlY29kZUhUTUw1U3RyaWN0IiwiZGVjb2RlWE1MU3RyaWN0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLElBQUlDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7QUFDQTs7Ozs7Ozs7QUFNQSxTQUFTRSxNQUFULENBQWdCQyxJQUFoQixFQUFzQkMsS0FBdEIsRUFBNkI7QUFDekIsU0FBTyxDQUFDLENBQUNBLEtBQUQsSUFBVUEsS0FBSyxJQUFJLENBQW5CLEdBQXVCTCxRQUFRLENBQUNNLFNBQWhDLEdBQTRDTixRQUFRLENBQUNPLFVBQXRELEVBQWtFSCxJQUFsRSxDQUFQO0FBQ0g7O0FBQ0ROLE9BQU8sQ0FBQ0ssTUFBUixHQUFpQkEsTUFBakI7QUFDQTs7Ozs7OztBQU1BLFNBQVNLLFlBQVQsQ0FBc0JKLElBQXRCLEVBQTRCQyxLQUE1QixFQUFtQztBQUMvQixTQUFPLENBQUMsQ0FBQ0EsS0FBRCxJQUFVQSxLQUFLLElBQUksQ0FBbkIsR0FBdUJMLFFBQVEsQ0FBQ00sU0FBaEMsR0FBNENOLFFBQVEsQ0FBQ1MsZ0JBQXRELEVBQXdFTCxJQUF4RSxDQUFQO0FBQ0g7O0FBQ0ROLE9BQU8sQ0FBQ1UsWUFBUixHQUF1QkEsWUFBdkI7QUFDQTs7Ozs7OztBQU1BLFNBQVNFLE1BQVQsQ0FBZ0JOLElBQWhCLEVBQXNCQyxLQUF0QixFQUE2QjtBQUN6QixTQUFPLENBQUMsQ0FBQ0EsS0FBRCxJQUFVQSxLQUFLLElBQUksQ0FBbkIsR0FBdUJILFFBQVEsQ0FBQ1MsU0FBaEMsR0FBNENULFFBQVEsQ0FBQ1UsVUFBdEQsRUFBa0VSLElBQWxFLENBQVA7QUFDSDs7QUFDRE4sT0FBTyxDQUFDWSxNQUFSLEdBQWlCQSxNQUFqQjs7QUFDQSxJQUFJRyxRQUFRLEdBQUdaLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBSCxPQUFPLENBQUNhLFNBQVIsR0FBb0JFLFFBQVEsQ0FBQ0YsU0FBN0I7QUFDQWIsT0FBTyxDQUFDYyxVQUFSLEdBQXFCQyxRQUFRLENBQUNELFVBQTlCO0FBQ0FkLE9BQU8sQ0FBQ2dCLE1BQVIsR0FBaUJELFFBQVEsQ0FBQ0MsTUFBMUIsQyxDQUNBOztBQUNBaEIsT0FBTyxDQUFDaUIsV0FBUixHQUFzQkYsUUFBUSxDQUFDRCxVQUEvQjtBQUNBZCxPQUFPLENBQUNrQixXQUFSLEdBQXNCSCxRQUFRLENBQUNELFVBQS9COztBQUNBLElBQUlLLFFBQVEsR0FBR2hCLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBSCxPQUFPLENBQUNRLFNBQVIsR0FBb0JXLFFBQVEsQ0FBQ1gsU0FBN0I7QUFDQVIsT0FBTyxDQUFDUyxVQUFSLEdBQXFCVSxRQUFRLENBQUNWLFVBQTlCO0FBQ0FULE9BQU8sQ0FBQ1csZ0JBQVIsR0FBMkJRLFFBQVEsQ0FBQ1IsZ0JBQXBDLEMsQ0FDQTs7QUFDQVgsT0FBTyxDQUFDb0IsV0FBUixHQUFzQkQsUUFBUSxDQUFDVixVQUEvQjtBQUNBVCxPQUFPLENBQUNxQixXQUFSLEdBQXNCRixRQUFRLENBQUNWLFVBQS9CO0FBQ0FULE9BQU8sQ0FBQ3NCLGlCQUFSLEdBQTRCSCxRQUFRLENBQUNSLGdCQUFyQztBQUNBWCxPQUFPLENBQUN1QixpQkFBUixHQUE0QkosUUFBUSxDQUFDUixnQkFBckM7QUFDQVgsT0FBTyxDQUFDd0IsZUFBUixHQUEwQkwsUUFBUSxDQUFDWCxTQUFuQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGRlY29kZV8xID0gcmVxdWlyZShcIi4vZGVjb2RlXCIpO1xudmFyIGVuY29kZV8xID0gcmVxdWlyZShcIi4vZW5jb2RlXCIpO1xuLyoqXG4gKiBEZWNvZGVzIGEgc3RyaW5nIHdpdGggZW50aXRpZXMuXG4gKlxuICogQHBhcmFtIGRhdGEgU3RyaW5nIHRvIGRlY29kZS5cbiAqIEBwYXJhbSBsZXZlbCBPcHRpb25hbCBsZXZlbCB0byBkZWNvZGUgYXQuIDAgPSBYTUwsIDEgPSBIVE1MLiBEZWZhdWx0IGlzIDAuXG4gKi9cbmZ1bmN0aW9uIGRlY29kZShkYXRhLCBsZXZlbCkge1xuICAgIHJldHVybiAoIWxldmVsIHx8IGxldmVsIDw9IDAgPyBkZWNvZGVfMS5kZWNvZGVYTUwgOiBkZWNvZGVfMS5kZWNvZGVIVE1MKShkYXRhKTtcbn1cbmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xuLyoqXG4gKiBEZWNvZGVzIGEgc3RyaW5nIHdpdGggZW50aXRpZXMuIERvZXMgbm90IGFsbG93IG1pc3NpbmcgdHJhaWxpbmcgc2VtaWNvbG9ucyBmb3IgZW50aXRpZXMuXG4gKlxuICogQHBhcmFtIGRhdGEgU3RyaW5nIHRvIGRlY29kZS5cbiAqIEBwYXJhbSBsZXZlbCBPcHRpb25hbCBsZXZlbCB0byBkZWNvZGUgYXQuIDAgPSBYTUwsIDEgPSBIVE1MLiBEZWZhdWx0IGlzIDAuXG4gKi9cbmZ1bmN0aW9uIGRlY29kZVN0cmljdChkYXRhLCBsZXZlbCkge1xuICAgIHJldHVybiAoIWxldmVsIHx8IGxldmVsIDw9IDAgPyBkZWNvZGVfMS5kZWNvZGVYTUwgOiBkZWNvZGVfMS5kZWNvZGVIVE1MU3RyaWN0KShkYXRhKTtcbn1cbmV4cG9ydHMuZGVjb2RlU3RyaWN0ID0gZGVjb2RlU3RyaWN0O1xuLyoqXG4gKiBFbmNvZGVzIGEgc3RyaW5nIHdpdGggZW50aXRpZXMuXG4gKlxuICogQHBhcmFtIGRhdGEgU3RyaW5nIHRvIGVuY29kZS5cbiAqIEBwYXJhbSBsZXZlbCBPcHRpb25hbCBsZXZlbCB0byBlbmNvZGUgYXQuIDAgPSBYTUwsIDEgPSBIVE1MLiBEZWZhdWx0IGlzIDAuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZShkYXRhLCBsZXZlbCkge1xuICAgIHJldHVybiAoIWxldmVsIHx8IGxldmVsIDw9IDAgPyBlbmNvZGVfMS5lbmNvZGVYTUwgOiBlbmNvZGVfMS5lbmNvZGVIVE1MKShkYXRhKTtcbn1cbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xudmFyIGVuY29kZV8yID0gcmVxdWlyZShcIi4vZW5jb2RlXCIpO1xuZXhwb3J0cy5lbmNvZGVYTUwgPSBlbmNvZGVfMi5lbmNvZGVYTUw7XG5leHBvcnRzLmVuY29kZUhUTUwgPSBlbmNvZGVfMi5lbmNvZGVIVE1MO1xuZXhwb3J0cy5lc2NhcGUgPSBlbmNvZGVfMi5lc2NhcGU7XG4vLyBMZWdhY3kgYWxpYXNlc1xuZXhwb3J0cy5lbmNvZGVIVE1MNCA9IGVuY29kZV8yLmVuY29kZUhUTUw7XG5leHBvcnRzLmVuY29kZUhUTUw1ID0gZW5jb2RlXzIuZW5jb2RlSFRNTDtcbnZhciBkZWNvZGVfMiA9IHJlcXVpcmUoXCIuL2RlY29kZVwiKTtcbmV4cG9ydHMuZGVjb2RlWE1MID0gZGVjb2RlXzIuZGVjb2RlWE1MO1xuZXhwb3J0cy5kZWNvZGVIVE1MID0gZGVjb2RlXzIuZGVjb2RlSFRNTDtcbmV4cG9ydHMuZGVjb2RlSFRNTFN0cmljdCA9IGRlY29kZV8yLmRlY29kZUhUTUxTdHJpY3Q7XG4vLyBMZWdhY3kgYWxpYXNlc1xuZXhwb3J0cy5kZWNvZGVIVE1MNCA9IGRlY29kZV8yLmRlY29kZUhUTUw7XG5leHBvcnRzLmRlY29kZUhUTUw1ID0gZGVjb2RlXzIuZGVjb2RlSFRNTDtcbmV4cG9ydHMuZGVjb2RlSFRNTDRTdHJpY3QgPSBkZWNvZGVfMi5kZWNvZGVIVE1MU3RyaWN0O1xuZXhwb3J0cy5kZWNvZGVIVE1MNVN0cmljdCA9IGRlY29kZV8yLmRlY29kZUhUTUxTdHJpY3Q7XG5leHBvcnRzLmRlY29kZVhNTFN0cmljdCA9IGRlY29kZV8yLmRlY29kZVhNTDtcbiJdfQ==