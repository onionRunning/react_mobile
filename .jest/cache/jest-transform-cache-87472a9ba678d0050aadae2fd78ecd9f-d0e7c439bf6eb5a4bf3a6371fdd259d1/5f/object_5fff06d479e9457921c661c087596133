cdb85bad079a1e2950a7ffe077e76b9d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _isPlainObject = _interopRequireDefault(require("./helpers/isPlainObject"));

var _typeOf = _interopRequireDefault(require("./helpers/typeOf"));

var _wrapValidator = _interopRequireDefault(require("./helpers/wrapValidator"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
  code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L202-L206
  so that it can be called outside of React's normal PropType flow
*/


var ReactPropTypeLocationNames = {
  prop: 'prop',
  context: 'context',
  childContext: 'child context'
};

function object(props, propName, componentName, location, propFullName) {
  var propValue = props[propName];

  if (propValue == null) {
    return null;
  }

  if ((0, _isPlainObject["default"])(propValue)) {
    return null;
  }

  var locationName = ReactPropTypeLocationNames[location] || location;
  return new TypeError("Invalid ".concat(locationName, " `").concat(propFullName, "` of type `").concat((0, _typeOf["default"])(propValue), "` supplied to `").concat(componentName, "`, expected `object`."));
}

object.isRequired = function objectRequired(props, propName, componentName, location, propFullName) {
  var propValue = props[propName];

  if (propValue == null) {
    var locationName = ReactPropTypeLocationNames[location] || location;
    return new TypeError("The ".concat(locationName, " `").concat(propFullName, "` is marked as required in `").concat(componentName, "`, but its value is `").concat(propValue, "`."));
  }

  for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
    rest[_key - 5] = arguments[_key];
  }

  return object.apply(void 0, [props, propName, componentName, location, propFullName].concat(rest));
};

var _default = function _default() {
  return (0, _wrapValidator["default"])(object, 'object');
};

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vYmplY3QuanMiXSwibmFtZXMiOlsiUmVhY3RQcm9wVHlwZUxvY2F0aW9uTmFtZXMiLCJwcm9wIiwiY29udGV4dCIsImNoaWxkQ29udGV4dCIsInByb3BWYWx1ZSIsInByb3BzIiwibG9jYXRpb25OYW1lIiwib2JqZWN0IiwicmVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsY0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLHlCQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxjQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBOzs7Ozs7O0FBRUE7Ozs7OztBQUtBLElBQU1BLDBCQUEwQixHQUFHO0FBQ2pDQyxFQUFBQSxJQUFJLEVBRDZCLE1BQUE7QUFFakNDLEVBQUFBLE9BQU8sRUFGMEIsU0FBQTtBQUdqQ0MsRUFBQUEsWUFBWSxFQUFFO0FBSG1CLENBQW5DOztBQU1BLFNBQUEsTUFBQSxDQUFBLEtBQUEsRUFBQSxRQUFBLEVBQUEsYUFBQSxFQUFBLFFBQUEsRUFBQSxZQUFBLEVBQXdFO0FBQUEsTUFDbERDLFNBRGtELEdBQ3BDQyxLQURvQyxDQUFBLFFBQUEsQ0FBQTs7QUFFdEUsTUFBSUQsU0FBUyxJQUFiLElBQUEsRUFBdUI7QUFDckIsV0FBQSxJQUFBO0FBQ0Q7O0FBRUQsTUFBSSxDQUFBLEdBQUEsY0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFKLFNBQUksQ0FBSixFQUE4QjtBQUM1QixXQUFBLElBQUE7QUFDRDs7QUFDRCxNQUFNRSxZQUFZLEdBQUdOLDBCQUEwQixDQUExQkEsUUFBMEIsQ0FBMUJBLElBQXJCLFFBQUE7QUFDQSxTQUFPLElBQUEsU0FBQSxDQUFBLFdBQUEsTUFBQSxDQUFBLFlBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxDQUFBLFlBQUEsRUFBQSxhQUFBLEVBQUEsTUFBQSxDQUF1RSxDQUFBLEdBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUF2RSxTQUF1RSxDQUF2RSxFQUFBLGlCQUFBLEVBQUEsTUFBQSxDQUFBLGFBQUEsRUFBUCx1QkFBTyxDQUFBLENBQVA7QUFDRDs7QUFDRE8sTUFBTSxDQUFOQSxVQUFBQSxHQUFvQixTQUFBLGNBQUEsQ0FBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLGFBQUEsRUFBQSxRQUFBLEVBQUEsWUFBQSxFQU9sQjtBQUFBLE1BQ29CSCxTQURwQixHQUNrQ0MsS0FEbEMsQ0FBQSxRQUFBLENBQUE7O0FBRUEsTUFBSUQsU0FBUyxJQUFiLElBQUEsRUFBdUI7QUFDckIsUUFBTUUsWUFBWSxHQUFHTiwwQkFBMEIsQ0FBMUJBLFFBQTBCLENBQTFCQSxJQUFyQixRQUFBO0FBQ0EsV0FBTyxJQUFBLFNBQUEsQ0FBQSxPQUFBLE1BQUEsQ0FBQSxZQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsQ0FBQSxZQUFBLEVBQUEsOEJBQUEsRUFBQSxNQUFBLENBQUEsYUFBQSxFQUFBLHVCQUFBLEVBQUEsTUFBQSxDQUFBLFNBQUEsRUFBUCxJQUFPLENBQUEsQ0FBUDtBQUNEOztBQUxELE9BQUEsSUFBQSxJQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFER1EsSUFDSCxHQUFBLElBQUEsS0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLEdBQUEsSUFBQSxHQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEdBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUE7QUFER0EsSUFBQUEsSUFDSCxDQUFBLElBQUEsR0FBQSxDQUFBLENBREdBLEdBQ0gsU0FBQSxDQUFBLElBQUEsQ0FER0E7QUFDSDs7QUFNQSxTQUFPRCxNQUFNLENBQU5BLEtBQUFBLENBQUFBLEtBQUFBLENBQUFBLEVBQUFBLENBQUFBLEtBQUFBLEVBQUFBLFFBQUFBLEVBQUFBLGFBQUFBLEVBQUFBLFFBQUFBLEVBQUFBLFlBQUFBLEVBQUFBLE1BQUFBLENBQVAsSUFBT0EsQ0FBQUEsQ0FBUDtBQWJGQSxDQUFBQTs7ZUFnQmUsU0FBQSxRQUFBLEdBQUE7QUFBQSxTQUFNLENBQUEsR0FBQSxjQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsTUFBQSxFQUFOLFFBQU0sQ0FBTiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJy4vaGVscGVycy9pc1BsYWluT2JqZWN0JztcbmltcG9ydCB0eXBlT2YgZnJvbSAnLi9oZWxwZXJzL3R5cGVPZic7XG5pbXBvcnQgd3JhcFZhbGlkYXRvciBmcm9tICcuL2hlbHBlcnMvd3JhcFZhbGlkYXRvcic7XG5cbi8qXG4gIGNvZGUgYWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iLzE0MTU2ZTU2YjljZjE4YWM4Njk2MzE4NWM1YWY0YWJkZGYzZmY4MTEvc3JjL2lzb21vcnBoaWMvY2xhc3NpYy90eXBlcy9SZWFjdFByb3BUeXBlcy5qcyNMMjAyLUwyMDZcbiAgc28gdGhhdCBpdCBjYW4gYmUgY2FsbGVkIG91dHNpZGUgb2YgUmVhY3QncyBub3JtYWwgUHJvcFR5cGUgZmxvd1xuKi9cblxuY29uc3QgUmVhY3RQcm9wVHlwZUxvY2F0aW9uTmFtZXMgPSB7XG4gIHByb3A6ICdwcm9wJyxcbiAgY29udGV4dDogJ2NvbnRleHQnLFxuICBjaGlsZENvbnRleHQ6ICdjaGlsZCBjb250ZXh0Jyxcbn07XG5cbmZ1bmN0aW9uIG9iamVjdChwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgY29uc3QgeyBbcHJvcE5hbWVdOiBwcm9wVmFsdWUgfSA9IHByb3BzO1xuICBpZiAocHJvcFZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChpc1BsYWluT2JqZWN0KHByb3BWYWx1ZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBsb2NhdGlvbk5hbWUgPSBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lc1tsb2NhdGlvbl0gfHwgbG9jYXRpb247XG4gIHJldHVybiBuZXcgVHlwZUVycm9yKGBJbnZhbGlkICR7bG9jYXRpb25OYW1lfSBcXGAke3Byb3BGdWxsTmFtZX1cXGAgb2YgdHlwZSBcXGAke3R5cGVPZihwcm9wVmFsdWUpfVxcYCBzdXBwbGllZCB0byBcXGAke2NvbXBvbmVudE5hbWV9XFxgLCBleHBlY3RlZCBcXGBvYmplY3RcXGAuYCk7XG59XG5vYmplY3QuaXNSZXF1aXJlZCA9IGZ1bmN0aW9uIG9iamVjdFJlcXVpcmVkKFxuICBwcm9wcyxcbiAgcHJvcE5hbWUsXG4gIGNvbXBvbmVudE5hbWUsXG4gIGxvY2F0aW9uLFxuICBwcm9wRnVsbE5hbWUsXG4gIC4uLnJlc3Rcbikge1xuICBjb25zdCB7IFtwcm9wTmFtZV06IHByb3BWYWx1ZSB9ID0gcHJvcHM7XG4gIGlmIChwcm9wVmFsdWUgPT0gbnVsbCkge1xuICAgIGNvbnN0IGxvY2F0aW9uTmFtZSA9IFJlYWN0UHJvcFR5cGVMb2NhdGlvbk5hbWVzW2xvY2F0aW9uXSB8fCBsb2NhdGlvbjtcbiAgICByZXR1cm4gbmV3IFR5cGVFcnJvcihgVGhlICR7bG9jYXRpb25OYW1lfSBcXGAke3Byb3BGdWxsTmFtZX1cXGAgaXMgbWFya2VkIGFzIHJlcXVpcmVkIGluIFxcYCR7Y29tcG9uZW50TmFtZX1cXGAsIGJ1dCBpdHMgdmFsdWUgaXMgXFxgJHtwcm9wVmFsdWV9XFxgLmApO1xuICB9XG4gIHJldHVybiBvYmplY3QocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCAuLi5yZXN0KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHdyYXBWYWxpZGF0b3Iob2JqZWN0LCAnb2JqZWN0Jyk7XG4iXX0=