{"version":3,"sources":["../src/between.js"],"names":["value","props","isNaN","gt","gte","lt","lte","errors","greaterThanError","lessThanError","key","numberThunk","thunk","argValidators","numberOrPropsFunc","validator","thunkValueValidator","argError","argValidator","options","optsThunks","propsThunkify","rest","propValue","opts","invokeWithProps","thunkValuesError","lowerCompare","upperCompare","errorMessage"],"mappings":"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","sourcesContent":["import entries from 'object.entries';\n\nimport shape from './shape';\nimport valuesOf from './valuesOf';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction number(props, propName, componentName) {\n  const value = props[propName];\n  if (typeof value === 'number' && !isNaN(value)) {\n    return null;\n  }\n\n  return new TypeError(`${componentName}: ${propName} must be a non-NaN number.`);\n}\n\nfunction numberOrPropsFunc(props, propName) {\n  const value = props[propName];\n\n  if (typeof value === 'function') {\n    return null;\n  }\n\n  if (typeof value === 'number' && !isNaN(value)) {\n    return null;\n  }\n\n  return new TypeError(`${propName}: a function, or a non-NaN number is required`);\n}\n\nfunction lowerCompare(value, { gt, gte }) {\n  if (typeof gt === 'number') {\n    return value > gt;\n  }\n  if (typeof gte === 'number') {\n    return value >= gte;\n  }\n  return true;\n}\n\nfunction upperCompare(value, { lt, lte }) {\n  if (typeof lt === 'number') {\n    return value < lt;\n  }\n  if (typeof lte === 'number') {\n    return value <= lte;\n  }\n  return true;\n}\n\nfunction greaterThanError({ gt, gte }) {\n  if (typeof gt === 'number') {\n    return `greater than ${gt}`;\n  }\n  if (typeof gte === 'number') {\n    return `greater than or equal to ${gte}`;\n  }\n  return '';\n}\n\nfunction lessThanError({ lt, lte }) {\n  if (typeof lt === 'number') {\n    return `less than ${lt}`;\n  }\n  if (typeof lte === 'number') {\n    return `less than or equal to ${lte}`;\n  }\n  return '';\n}\n\nfunction errorMessage(componentName, propName, opts) {\n  const errors = [greaterThanError(opts), lessThanError(opts)].filter(Boolean).join(' and ');\n  return `${componentName}: ${propName} must be ${errors}`;\n}\n\nfunction propsThunkify(opts) {\n  return entries(opts).reduce((acc, [key, value]) => {\n    const numberThunk = typeof value === 'number' ? () => value : value;\n    return { ...acc, [key]: numberThunk };\n  }, {});\n}\n\nfunction invokeWithProps(optsThunks, props) {\n  return entries(optsThunks).reduce((acc, [key, thunk]) => {\n    const value = thunk(props);\n    return { ...acc, [key]: value };\n  }, {});\n}\n\nconst argValidators = [\n  shape({ lt: numberOrPropsFunc, gt: numberOrPropsFunc }).isRequired,\n  shape({ lte: numberOrPropsFunc, gt: numberOrPropsFunc }).isRequired,\n  shape({ lt: numberOrPropsFunc, gte: numberOrPropsFunc }).isRequired,\n  shape({ lte: numberOrPropsFunc, gte: numberOrPropsFunc }).isRequired,\n  shape({ lt: numberOrPropsFunc }).isRequired,\n  shape({ lte: numberOrPropsFunc }).isRequired,\n  shape({ gt: numberOrPropsFunc }).isRequired,\n  shape({ gte: numberOrPropsFunc }).isRequired,\n];\nfunction argValidator(props, propName) {\n  return argValidators.every((validator) => !!validator(props, propName));\n}\n\nconst thunkValueValidator = valuesOf(number).isRequired;\n\nexport default function betweenValidator(options) {\n  const argError = argValidator({ options }, 'options');\n  if (argError) {\n    throw new TypeError('between: only one of the pairs of `lt`/`lte`, and `gt`/`gte`, may be supplied, and at least one pair must be provided.');\n  }\n\n  const optsThunks = propsThunkify(options);\n\n  const validator = function between(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return null;\n    }\n\n    if (typeof propValue !== 'number') {\n      return new RangeError(`${componentName}: ${propName} must be a number, got \"${typeof propValue}\"`);\n    }\n\n    const opts = invokeWithProps(optsThunks, props);\n    const thunkValuesError = thunkValueValidator(\n      { [propName]: opts },\n      propName,\n      componentName,\n      ...rest,\n    );\n    if (thunkValuesError) {\n      return thunkValuesError;\n    }\n\n    if (!lowerCompare(propValue, opts) || !upperCompare(propValue, opts)) {\n      return new RangeError(errorMessage(componentName, propName, opts));\n    }\n\n    return null;\n  };\n  validator.isRequired = function betweenRequired(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (typeof propValue !== 'number') {\n      return new RangeError(`${componentName}: ${propName} must be a number, got \"${typeof propValue}\"`);\n    }\n\n    const opts = invokeWithProps(optsThunks, props);\n    const thunkValuesError = thunkValueValidator(\n      { [propName]: opts },\n      propName,\n      componentName,\n      ...rest,\n    );\n    if (thunkValuesError) {\n      return thunkValuesError;\n    }\n\n    if (!lowerCompare(propValue, opts) || !upperCompare(propValue, opts)) {\n      return new RangeError(errorMessage(componentName, propName, opts));\n    }\n\n    return null;\n  };\n\n  return wrapValidator(validator, 'between', options);\n}\n"]}