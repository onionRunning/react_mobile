7dc3508316a38e10807d33b80c0248d2
exports.removeElement = function (elem) {
  if (elem.prev) elem.prev.next = elem.next;
  if (elem.next) elem.next.prev = elem.prev;

  if (elem.parent) {
    var childs = elem.parent.children;
    childs.splice(childs.lastIndexOf(elem), 1);
  }
};

exports.replaceElement = function (elem, replacement) {
  var prev = replacement.prev = elem.prev;

  if (prev) {
    prev.next = replacement;
  }

  var next = replacement.next = elem.next;

  if (next) {
    next.prev = replacement;
  }

  var parent = replacement.parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs[childs.lastIndexOf(elem)] = replacement;
  }
};

exports.appendChild = function (elem, child) {
  child.parent = elem;

  if (elem.children.push(child) !== 1) {
    var sibling = elem.children[elem.children.length - 2];
    sibling.next = child;
    child.prev = sibling;
    child.next = null;
  }
};

exports.append = function (elem, next) {
  var parent = elem.parent,
      currNext = elem.next;
  next.next = currNext;
  next.prev = elem;
  elem.next = next;
  next.parent = parent;

  if (currNext) {
    currNext.prev = next;

    if (parent) {
      var childs = parent.children;
      childs.splice(childs.lastIndexOf(currNext), 0, next);
    }
  } else if (parent) {
    parent.children.push(next);
  }
};

exports.prepend = function (elem, prev) {
  var parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs.splice(childs.lastIndexOf(elem), 0, prev);
  }

  if (elem.prev) {
    elem.prev.next = prev;
  }

  prev.parent = parent;
  prev.prev = elem.prev;
  prev.next = elem;
  elem.prev = prev;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmlwdWxhdGlvbi5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwicmVtb3ZlRWxlbWVudCIsImVsZW0iLCJwcmV2IiwibmV4dCIsInBhcmVudCIsImNoaWxkcyIsImNoaWxkcmVuIiwic3BsaWNlIiwibGFzdEluZGV4T2YiLCJyZXBsYWNlRWxlbWVudCIsInJlcGxhY2VtZW50IiwiYXBwZW5kQ2hpbGQiLCJjaGlsZCIsInB1c2giLCJzaWJsaW5nIiwibGVuZ3RoIiwiYXBwZW5kIiwiY3Vyck5leHQiLCJwcmVwZW5kIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDQyxhQUFSLEdBQXdCLFVBQVNDLElBQVQsRUFBYztBQUNyQyxNQUFHQSxJQUFJLENBQUNDLElBQVIsRUFBY0QsSUFBSSxDQUFDQyxJQUFMLENBQVVDLElBQVYsR0FBaUJGLElBQUksQ0FBQ0UsSUFBdEI7QUFDZCxNQUFHRixJQUFJLENBQUNFLElBQVIsRUFBY0YsSUFBSSxDQUFDRSxJQUFMLENBQVVELElBQVYsR0FBaUJELElBQUksQ0FBQ0MsSUFBdEI7O0FBRWQsTUFBR0QsSUFBSSxDQUFDRyxNQUFSLEVBQWU7QUFDZCxRQUFJQyxNQUFNLEdBQUdKLElBQUksQ0FBQ0csTUFBTCxDQUFZRSxRQUF6QjtBQUNBRCxJQUFBQSxNQUFNLENBQUNFLE1BQVAsQ0FBY0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CUCxJQUFuQixDQUFkLEVBQXdDLENBQXhDO0FBQ0E7QUFDRCxDQVJEOztBQVVBRixPQUFPLENBQUNVLGNBQVIsR0FBeUIsVUFBU1IsSUFBVCxFQUFlUyxXQUFmLEVBQTJCO0FBQ25ELE1BQUlSLElBQUksR0FBR1EsV0FBVyxDQUFDUixJQUFaLEdBQW1CRCxJQUFJLENBQUNDLElBQW5DOztBQUNBLE1BQUdBLElBQUgsRUFBUTtBQUNQQSxJQUFBQSxJQUFJLENBQUNDLElBQUwsR0FBWU8sV0FBWjtBQUNBOztBQUVELE1BQUlQLElBQUksR0FBR08sV0FBVyxDQUFDUCxJQUFaLEdBQW1CRixJQUFJ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QyxJQUFMLEdBQVlBLElBQVo7QUFDQSxDQWZEIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZW1vdmVFbGVtZW50ID0gZnVuY3Rpb24oZWxlbSl7XG5cdGlmKGVsZW0ucHJldikgZWxlbS5wcmV2Lm5leHQgPSBlbGVtLm5leHQ7XG5cdGlmKGVsZW0ubmV4dCkgZWxlbS5uZXh0LnByZXYgPSBlbGVtLnByZXY7XG5cblx0aWYoZWxlbS5wYXJlbnQpe1xuXHRcdHZhciBjaGlsZHMgPSBlbGVtLnBhcmVudC5jaGlsZHJlbjtcblx0XHRjaGlsZHMuc3BsaWNlKGNoaWxkcy5sYXN0SW5kZXhPZihlbGVtKSwgMSk7XG5cdH1cbn07XG5cbmV4cG9ydHMucmVwbGFjZUVsZW1lbnQgPSBmdW5jdGlvbihlbGVtLCByZXBsYWNlbWVudCl7XG5cdHZhciBwcmV2ID0gcmVwbGFjZW1lbnQucHJldiA9IGVsZW0ucHJldjtcblx0aWYocHJldil7XG5cdFx0cHJldi5uZXh0ID0gcmVwbGFjZW1lbnQ7XG5cdH1cblxuXHR2YXIgbmV4dCA9IHJlcGxhY2VtZW50Lm5leHQgPSBlbGVtLm5leHQ7XG5cdGlmKG5leHQpe1xuXHRcdG5leHQucHJldiA9IHJlcGxhY2VtZW50O1xuXHR9XG5cblx0dmFyIHBhcmVudCA9IHJlcGxhY2VtZW50LnBhcmVudCA9IGVsZW0ucGFyZW50O1xuXHRpZihwYXJlbnQpe1xuXHRcdHZhciBjaGlsZHMgPSBwYXJlbnQuY2hpbGRyZW47XG5cdFx0Y2hpbGRzW2NoaWxkcy5sYXN0SW5kZXhPZihlbGVtKV0gPSByZXBsYWNlbWVudDtcblx0fVxufTtcblxuZXhwb3J0cy5hcHBlbmRDaGlsZCA9IGZ1bmN0aW9uKGVsZW0sIGNoaWxkKXtcblx0Y2hpbGQucGFyZW50ID0gZWxlbTtcblxuXHRpZihlbGVtLmNoaWxkcmVuLnB1c2goY2hpbGQpICE9PSAxKXtcblx0XHR2YXIgc2libGluZyA9IGVsZW0uY2hpbGRyZW5bZWxlbS5jaGlsZHJlbi5sZW5ndGggLSAyXTtcblx0XHRzaWJsaW5nLm5leHQgPSBjaGlsZDtcblx0XHRjaGlsZC5wcmV2ID0gc2libGluZztcblx0XHRjaGlsZC5uZXh0ID0gbnVsbDtcblx0fVxufTtcblxuZXhwb3J0cy5hcHBlbmQgPSBmdW5jdGlvbihlbGVtLCBuZXh0KXtcblx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50LFxuXHRcdGN1cnJOZXh0ID0gZWxlbS5uZXh0O1xuXG5cdG5leHQubmV4dCA9IGN1cnJOZXh0O1xuXHRuZXh0LnByZXYgPSBlbGVtO1xuXHRlbGVtLm5leHQgPSBuZXh0O1xuXHRuZXh0LnBhcmVudCA9IHBhcmVudDtcblxuXHRpZihjdXJyTmV4dCl7XG5cdFx0Y3Vyck5leHQucHJldiA9IG5leHQ7XG5cdFx0aWYocGFyZW50KXtcblx0XHRcdHZhciBjaGlsZHMgPSBwYXJlbnQuY2hpbGRyZW47XG5cdFx0XHRjaGlsZHMuc3BsaWNlKGNoaWxkcy5sYXN0SW5kZXhPZihjdXJyTmV4dCksIDAsIG5leHQpO1xuXHRcdH1cblx0fSBlbHNlIGlmKHBhcmVudCl7XG5cdFx0cGFyZW50LmNoaWxkcmVuLnB1c2gobmV4dCk7XG5cdH1cbn07XG5cbmV4cG9ydHMucHJlcGVuZCA9IGZ1bmN0aW9uKGVsZW0sIHByZXYpe1xuXHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnQ7XG5cdGlmKHBhcmVudCl7XG5cdFx0dmFyIGNoaWxkcyA9IHBhcmVudC5jaGlsZHJlbjtcblx0XHRjaGlsZHMuc3BsaWNlKGNoaWxkcy5sYXN0SW5kZXhPZihlbGVtKSwgMCwgcHJldik7XG5cdH1cblxuXHRpZihlbGVtLnByZXYpe1xuXHRcdGVsZW0ucHJldi5uZXh0ID0gcHJldjtcblx0fVxuXHRcblx0cHJldi5wYXJlbnQgPSBwYXJlbnQ7XG5cdHByZXYucHJldiA9IGVsZW0ucHJldjtcblx0cHJldi5uZXh0ID0gZWxlbTtcblx0ZWxlbS5wcmV2ID0gcHJldjtcbn07XG5cblxuIl19