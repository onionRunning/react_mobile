{"version":3,"file":"/Users/wangcong/workspace/hl/font/react_mobile/src/global/utils.ts","sources":["/Users/wangcong/workspace/hl/font/react_mobile/src/global/utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,iCAAgE;AACxD,IAAA,IAAI,GAA4D,mBAAW,KAAvE,EAAE,GAAG,GAAuD,mBAAW,IAAlE,EAAE,YAAY,GAAyC,mBAAW,aAApD,EAAE,UAAU,GAA6B,mBAAW,WAAxC,EAAE,UAAU,GAAiB,mBAAW,WAA5B,EAAE,UAAU,GAAK,mBAAW,WAAhB,CAAgB;AAEnF,OAAO;AACM,QAAA,cAAc,GAAG,UAAC,IAAY;IACzC,OAAO,UAAC,GAAU,EAAE,GAAS;QAArB,oBAAA,EAAA,UAAU;QAAE,oBAAA,EAAA,SAAS;QAC3B,IAAI,GAAG,CAAC,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC,GAAG,UAAU,CAAA;QACpD,IAAM,GAAG,GAAG,IAAI,GAAG,UAAU,CAAA;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAA;IAC5C,CAAC,CAAA;AACH,CAAC,CAAA;AAED,SAAS;AACT,SAAgB,WAAW,CAAI,GAAQ,EAAE,IAAY;IACnD,GAAG,kBAAO,GAAG,CAAC,CAAA;IACd,IAAM,MAAM,GAAG,EAAE,CAAA;IACjB,IAAM,MAAM,GAAG,sBAAc,CAAC,IAAI,CAAC,CAAA;IACnC,OAAO,GAAG,CAAC,MAAM,GAAG,IAAI,EAAE;QACxB,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;QAClC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;KACtC;IACD,OAAO,MAAM,CAAA;AACf,CAAC;AATD,kCASC;AAED,+BAA+B;AAClB,QAAA,cAAc,GAAG,UAAC,IAAY;IACzC,IAAM,UAAU,GAAG,sBAAc,CAAC,IAAI,CAAC,CAAA;IACvC,IAAM,WAAW,GAAG,UAAU,CAAC,IAAI,EAAE,kBAAU,CAAC,MAAM,GAAG,YAAY,CAAC,CAAA;IACtE,OAAO,eAAI,kBAAU,EAAE,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,CAAA;AAC1D,CAAC,CAAA;AAED,WAAW;AACE,QAAA,aAAa,GAAG;IAC3B,OAAO,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;AAC7B,CAAC,CAAA;AAED,WAAW;AACE,QAAA,QAAQ,GAAG,UAAI,CAAI;IAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,CAAA;AAChE,CAAC,CAAA;AAED,cAAc;AACD,QAAA,QAAQ,GAAG,UAAI,CAAI;IAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,CAAA;AAChE,CAAC,CAAA;AAQD,gBAAgB;AACH,QAAA,cAAc,GAAG;IAC5B,IAAM,OAAO,GAAc,EAAE,CAAA;IAC7B,qBAAa,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,KAAK;QACnC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,GAAG,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAA;QAC1E,OAAO,GAAG,GAAG,GAAG,CAAA;IAClB,CAAC,EAAE,IAAI,CAAC,CAAA;IACR,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA","sourcesContent":["import { INIT_NUMBER, INIT_WORLD, LEVEL_REWARDS } from './const'\nconst { ZERO, ONE, RANDOM_WORLD, RANDOM_ONE, RANDOM_THR, RANDOM_TWO } = INIT_NUMBER\n\n// 随机函数\nexport const generateRandom = (seed: number) => {\n  return (min = ZERO, max = ONE) => {\n    seed = (seed * RANDOM_ONE + RANDOM_TWO) % RANDOM_THR\n    const rnd = seed / RANDOM_THR\n    return Math.floor(min + rnd * (max - min))\n  }\n}\n\n// 数组随机排列\nexport function randomArray<T>(arr: T[], seed: number): T[] {\n  arr = [...arr]\n  const result = []\n  const random = generateRandom(seed)\n  while (arr.length > ZERO) {\n    const t = random(ZERO, arr.length)\n    result.push(arr.splice(t, ONE)[ZERO])\n  }\n  return result\n}\n\n// 随机取 WORLD 里取 （0） - (977 -21)\nexport const getRandomWorld = (seed: number) => {\n  const randomFunc = generateRandom(seed)\n  const randomIndex = randomFunc(ZERO, INIT_WORLD.length - RANDOM_WORLD)\n  return [...INIT_WORLD].splice(randomIndex, RANDOM_WORLD)\n}\n\n// 获取随机seed\nexport const getRandomSeed = () => {\n  return new Date().getTime()\n}\n\n// 判断类型是字符串\nexport const isString = <T>(s: T): boolean => {\n  return Object.prototype.toString.call(s) === '[object String]'\n}\n\n// 判断类型是object\nexport const isObject = <T>(s: T): boolean => {\n  return Object.prototype.toString.call(s) === '[object Object]'\n}\n\n// 获取奖励等级 以及 各个等级对应的奖励金额\ninterface Rewards {\n  reward: number\n  currentLevel: number\n  rewardLevel: number\n}\n// 触发按钮点击下一题时才触发\nexport const getRewardsInfo = () => {\n  const records: Rewards[] = []\n  LEVEL_REWARDS.reduce((cur, pre, index) => {\n    records.push({ reward: pre, currentLevel: cur + pre, rewardLevel: index })\n    return cur + pre\n  }, ZERO)\n  return records\n}\n"]}