{"version":3,"sources":["ToPropertyKey.js"],"names":["GetIntrinsic","require","$String","ToPrimitive","ToString","module","exports","ToPropertyKey","argument","key"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B;;AAEA,IAAIG,WAAW,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AACjD,MAAIC,GAAG,GAAGN,WAAW,CAACK,QAAD,EAAWN,OAAX,CAArB;AACA,SAAO,OAAOO,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCL,QAAQ,CAACK,GAAD,CAA/C;AACA,CAHD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $String = GetIntrinsic('%String%');\n\nvar ToPrimitive = require('./ToPrimitive');\nvar ToString = require('./ToString');\n\n// https://www.ecma-international.org/ecma-262/6.0/#sec-topropertykey\n\nmodule.exports = function ToPropertyKey(argument) {\n\tvar key = ToPrimitive(argument, $String);\n\treturn typeof key === 'symbol' ? key : ToString(key);\n};\n"]}