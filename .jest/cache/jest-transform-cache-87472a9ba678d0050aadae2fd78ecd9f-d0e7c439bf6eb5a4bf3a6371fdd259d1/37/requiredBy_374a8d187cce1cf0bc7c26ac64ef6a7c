460bea87b022abf4f233040702b2239e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getRequiredBy;

var _objectIs = _interopRequireDefault(require("object-is"));

var _wrapValidator = _interopRequireDefault(require("./helpers/wrapValidator"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function getRequiredBy(requiredByPropName, propType) {
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  function requiredBy(props, propName, componentName) {
    if (props[requiredByPropName]) {
      var propValue = props[propName];

      if ((0, _objectIs["default"])(propValue, defaultValue) || typeof propValue === 'undefined') {
        return new TypeError("".concat(componentName, ": when ").concat(requiredByPropName, " is true, prop \u201C").concat(propName, "\u201D must be present."));
      }
    }

    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(void 0, [props, propName, componentName].concat(rest));
  }

  requiredBy.isRequired = function requiredByRequired(props, propName, componentName) {
    var propValue = props[propName];

    if ((0, _objectIs["default"])(propValue, defaultValue)) {
      return new TypeError("".concat(componentName, ": prop \u201C").concat(propName, "\u201D must be present."));
    }

    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    return propType.isRequired.apply(propType, [props, propName, componentName].concat(rest));
  };

  return (0, _wrapValidator["default"])(requiredBy, "requiredBy \u201C".concat(requiredByPropName, "\u201D"), [requiredByPropName, defaultValue]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXF1aXJlZEJ5LmpzIl0sIm5hbWVzIjpbImRlZmF1bHRWYWx1ZSIsInJlc3QiLCJwcm9wcyIsInByb3BWYWx1ZSIsInByb3BUeXBlIiwicmVxdWlyZWRCeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsU0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsY0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLHlCQUFBLENBQUEsQ0FBQTs7Ozs7Ozs7QUFFZSxTQUFBLGFBQUEsQ0FBQSxrQkFBQSxFQUFBLFFBQUEsRUFBMEU7QUFBQSxNQUFyQkEsWUFBcUIsR0FBQSxTQUFBLENBQUEsTUFBQSxHQUFBLENBQUEsSUFBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEsU0FBQSxHQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsR0FBTixJQUFNOztBQUN2RixXQUFBLFVBQUEsQ0FBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLGFBQUEsRUFBNkQ7QUFDM0QsUUFBSUUsS0FBSyxDQUFULGtCQUFTLENBQVQsRUFBK0I7QUFBQSxVQUNUQyxTQURTLEdBQ0tELEtBREwsQ0FBQSxRQUFBLENBQUE7O0FBRTdCLFVBQUksQ0FBQSxHQUFBLFNBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxTQUFBLEVBQUEsWUFBQSxLQUErQixPQUFBLFNBQUEsS0FBbkMsV0FBQSxFQUFxRTtBQUNuRSxlQUFPLElBQUEsU0FBQSxDQUFBLEdBQUEsTUFBQSxDQUFBLGFBQUEsRUFBQSxTQUFBLEVBQUEsTUFBQSxDQUFBLGtCQUFBLEVBQUEsdUJBQUEsRUFBQSxNQUFBLENBQUEsUUFBQSxFQUFQLHlCQUFPLENBQUEsQ0FBUDtBQUdEO0FBQ0Y7O0FBUjBELFNBQUEsSUFBQSxJQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFBTkQsSUFBTSxHQUFBLElBQUEsS0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLEdBQUEsSUFBQSxHQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEdBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUE7QUFBTkEsTUFBQUEsSUFBTSxDQUFBLElBQUEsR0FBQSxDQUFBLENBQU5BLEdBQU0sU0FBQSxDQUFBLElBQUEsQ0FBTkE7QUFBTTs7QUFTM0QsV0FBT0csUUFBUSxDQUFSQSxLQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxFQUFBQSxDQUFBQSxLQUFBQSxFQUFBQSxRQUFBQSxFQUFBQSxhQUFBQSxFQUFBQSxNQUFBQSxDQUFQLElBQU9BLENBQUFBLENBQVA7QUFDRDs7QUFDREMsRUFBQUEsVUFBVSxDQUFWQSxVQUFBQSxHQUF3QixTQUFBLGtCQUFBLENBQUEsS0FBQSxFQUFBLFFBQUEsRUFBQSxhQUFBLEVBQXFFO0FBQUEsUUFDdkVGLFNBRHVFLEdBQ3pERCxLQUR5RCxDQUFBLFFBQUEsQ0FBQTs7QUFFM0YsUUFBSSxDQUFBLEdBQUEsU0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLFNBQUEsRUFBSixZQUFJLENBQUosRUFBaUM7QUFDL0IsYUFBTyxJQUFBLFNBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxhQUFBLEVBQUEsZUFBQSxFQUFBLE1BQUEsQ0FBQSxRQUFBLEVBQVAseUJBQU8sQ0FBQSxDQUFQO0FBQ0Q7O0FBSjBGLFNBQUEsSUFBQSxLQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFBTkQsSUFBTSxHQUFBLElBQUEsS0FBQSxDQUFBLEtBQUEsR0FBQSxDQUFBLEdBQUEsS0FBQSxHQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBLEdBQUEsQ0FBQSxFQUFBLEtBQUEsR0FBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEVBQUE7QUFBTkEsTUFBQUEsSUFBTSxDQUFBLEtBQUEsR0FBQSxDQUFBLENBQU5BLEdBQU0sU0FBQSxDQUFBLEtBQUEsQ0FBTkE7QUFBTTs7QUFLM0YsV0FBT0csUUFBUSxDQUFSQSxVQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxRQUFBQSxFQUFRLENBQUEsS0FBQSxFQUFBLFFBQUEsRUFBQSxhQUFBLEVBQUEsTUFBQSxDQUFmLElBQWUsQ0FBUkEsQ0FBUDtBQUxGQyxHQUFBQTs7QUFRQSxTQUFPLENBQUEsR0FBQSxjQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsVUFBQSxFQUFBLG9CQUFBLE1BQUEsQ0FBQSxrQkFBQSxFQUFBLFFBQUEsQ0FBQSxFQUdMLENBQUEsa0JBQUEsRUFIRixZQUdFLENBSEssQ0FBUDtBQUtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzIGZyb20gJ29iamVjdC1pcyc7XG5pbXBvcnQgd3JhcFZhbGlkYXRvciBmcm9tICcuL2hlbHBlcnMvd3JhcFZhbGlkYXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFJlcXVpcmVkQnkocmVxdWlyZWRCeVByb3BOYW1lLCBwcm9wVHlwZSwgZGVmYXVsdFZhbHVlID0gbnVsbCkge1xuICBmdW5jdGlvbiByZXF1aXJlZEJ5KHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgLi4ucmVzdCkge1xuICAgIGlmIChwcm9wc1tyZXF1aXJlZEJ5UHJvcE5hbWVdKSB7XG4gICAgICBjb25zdCB7IFtwcm9wTmFtZV06IHByb3BWYWx1ZSB9ID0gcHJvcHM7XG4gICAgICBpZiAoaXMocHJvcFZhbHVlLCBkZWZhdWx0VmFsdWUpIHx8IHR5cGVvZiBwcm9wVmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIGAke2NvbXBvbmVudE5hbWV9OiB3aGVuICR7cmVxdWlyZWRCeVByb3BOYW1lfSBpcyB0cnVlLCBwcm9wIOKAnCR7cHJvcE5hbWV94oCdIG11c3QgYmUgcHJlc2VudC5gLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcFR5cGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCAuLi5yZXN0KTtcbiAgfVxuICByZXF1aXJlZEJ5LmlzUmVxdWlyZWQgPSBmdW5jdGlvbiByZXF1aXJlZEJ5UmVxdWlyZWQocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCAuLi5yZXN0KSB7XG4gICAgY29uc3QgeyBbcHJvcE5hbWVdOiBwcm9wVmFsdWUgfSA9IHByb3BzO1xuICAgIGlmIChpcyhwcm9wVmFsdWUsIGRlZmF1bHRWYWx1ZSkpIHtcbiAgICAgIHJldHVybiBuZXcgVHlwZUVycm9yKGAke2NvbXBvbmVudE5hbWV9OiBwcm9wIOKAnCR7cHJvcE5hbWV94oCdIG11c3QgYmUgcHJlc2VudC5gKTtcbiAgICB9XG4gICAgcmV0dXJuIHByb3BUeXBlLmlzUmVxdWlyZWQocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCAuLi5yZXN0KTtcbiAgfTtcblxuICByZXR1cm4gd3JhcFZhbGlkYXRvcihcbiAgICByZXF1aXJlZEJ5LFxuICAgIGByZXF1aXJlZEJ5IOKAnCR7cmVxdWlyZWRCeVByb3BOYW1lfeKAnWAsXG4gICAgW3JlcXVpcmVkQnlQcm9wTmFtZSwgZGVmYXVsdFZhbHVlXSxcbiAgKTtcbn1cbiJdfQ==