{"version":3,"sources":["../src/requiredBy.js"],"names":["defaultValue","rest","props","propValue","propType","requiredBy"],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEe,SAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,EAA0E;AAAA,MAArBA,YAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;;AACvF,WAAA,UAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAA6D;AAC3D,QAAIE,KAAK,CAAT,kBAAS,CAAT,EAA+B;AAAA,UACTC,SADS,GACKD,KADL,CAAA,QAAA,CAAA;;AAE7B,UAAI,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAA,YAAA,KAA+B,OAAA,SAAA,KAAnC,WAAA,EAAqE;AACnE,eAAO,IAAA,SAAA,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,SAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,uBAAA,EAAA,MAAA,CAAA,QAAA,EAAP,yBAAO,CAAA,CAAP;AAGD;AACF;;AAR0D,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAND,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAS3D,WAAOG,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,aAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AACD;;AACDC,EAAAA,UAAU,CAAVA,UAAAA,GAAwB,SAAA,kBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAqE;AAAA,QACvEF,SADuE,GACzDD,KADyD,CAAA,QAAA,CAAA;;AAE3F,QAAI,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAJ,YAAI,CAAJ,EAAiC;AAC/B,aAAO,IAAA,SAAA,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,eAAA,EAAA,MAAA,CAAA,QAAA,EAAP,yBAAO,CAAA,CAAP;AACD;;AAJ0F,SAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAND,IAAM,GAAA,IAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,KAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,KAAA,CAANA;AAAM;;AAK3F,WAAOG,QAAQ,CAARA,UAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAQ,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,CAAf,IAAe,CAARA,CAAP;AALFC,GAAAA;;AAQA,SAAO,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,UAAA,EAAA,oBAAA,MAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,EAGL,CAAA,kBAAA,EAHF,YAGE,CAHK,CAAP;AAKD","sourcesContent":["import is from 'object-is';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function getRequiredBy(requiredByPropName, propType, defaultValue = null) {\n  function requiredBy(props, propName, componentName, ...rest) {\n    if (props[requiredByPropName]) {\n      const { [propName]: propValue } = props;\n      if (is(propValue, defaultValue) || typeof propValue === 'undefined') {\n        return new TypeError(\n          `${componentName}: when ${requiredByPropName} is true, prop “${propName}” must be present.`,\n        );\n      }\n    }\n    return propType(props, propName, componentName, ...rest);\n  }\n  requiredBy.isRequired = function requiredByRequired(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (is(propValue, defaultValue)) {\n      return new TypeError(`${componentName}: prop “${propName}” must be present.`);\n    }\n    return propType.isRequired(props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(\n    requiredBy,\n    `requiredBy “${requiredByPropName}”`,\n    [requiredByPropName, defaultValue],\n  );\n}\n"]}