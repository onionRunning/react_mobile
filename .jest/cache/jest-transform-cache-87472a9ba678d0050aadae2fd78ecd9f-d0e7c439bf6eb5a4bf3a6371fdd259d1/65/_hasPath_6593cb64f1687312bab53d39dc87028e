154aa4cb0797738447c29e949dfdd719
var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');
/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */


function hasPath(object, path, hasFunc) {
  path = castPath(path, object);
  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);

    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }

    object = object[key];
  }

  if (result || ++index != length) {
    return result;
  }

  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9oYXNQYXRoLmpzIl0sIm5hbWVzIjpbImNhc3RQYXRoIiwicmVxdWlyZSIsImlzQXJndW1lbnRzIiwiaXNBcnJheSIsImlzSW5kZXgiLCJpc0xlbmd0aCIsInRvS2V5IiwiaGFzUGF0aCIsIm9iamVjdCIsInBhdGgiLCJoYXNGdW5jIiwiaW5kZXgiLCJsZW5ndGgiLCJyZXN1bHQiLCJrZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXRCO0FBQUEsSUFDSUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUR6QjtBQUFBLElBRUlFLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFdBQUQsQ0FGckI7QUFBQSxJQUdJRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBSHJCO0FBQUEsSUFJSUksUUFBUSxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUp0QjtBQUFBLElBS0lLLEtBQUssR0FBR0wsT0FBTyxDQUFDLFVBQUQsQ0FMbkI7QUFPQTs7Ozs7Ozs7Ozs7QUFTQSxTQUFTTSxPQUFULENBQWlCQyxNQUFqQixFQUF5QkMsSUFBekIsRUFBK0JDLE9BQS9CLEVBQXdDO0FBQ3RDRCxFQUFBQSxJQUFJLEdBQUdULFFBQVEsQ0FBQ1MsSUFBRCxFQUFPRCxNQUFQLENBQWY7QUFFQSxNQUFJRyxLQUFLLEdBQUcsQ0FBQyxDQUFiO0FBQUEsTUFDSUMsTUFBTSxHQUFHSCxJQUFJLENBQUNHLE1BRGxCO0FBQUEsTUFFSUMsTUFBTSxHQUFHLEtBRmI7O0FBSUEsU0FBTyxFQUFFRixLQUFGLEdBQVVDLE1BQWpCLEVBQXlCO0FBQ3ZCLFFBQUlFLEdBQUcsR0FBR1IsS0FBSyxDQUFDRyxJQUFJLENBQUNFLEtBQUQsQ0FBTCxDQUFmOztBQUNBLFFBQUksRUFBRUUsTUFBTSxHQUFHTCxNQUFNLElBQUksSUFBVixJQUFrQkUsT0FBTyxDQUFDRixNQUFELEVBQVNNLEdBQVQsQ0FBcEMsQ0FBSixFQUF3RDtBQUN0RDtBQUNEOztBQUNETixJQUFBQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ00sR0FBRCxDQUFmO0FBQ0Q7O0FBQ0QsTUFBSUQsTUFBTSxJQUFJLEVBQUVGLEtBQUYsSUFBV0MsTUFBekIsRUFBaUM7QUFDL0IsV0FBT0MsTUFBUDtBQUNEOztBQUNERCxFQUFBQSxNQUFNLEdBQUdKLE1BQU0sSUFBSSxJQUFWLEdBQWlCLENBQWpCLEdBQXFCQSxNQUFNLENBQUNJLE1BQXJDO0FBQ0EsU0FBTyxDQUFDLENBQUNBLE1BQUYsSUFBWVAsUUFBUSxDQUFDTyxNQUFELENBQXBCLElBQWdDUixPQUFPLENBQUNVLEdBQUQsRUFBTUYsTUFBTixDQUF2QyxLQUNKVCxPQUFPLENBQUNLLE1BQUQsQ0FBUCxJQUFtQk4sV0FBVyxDQUFDTSxNQUFELENBRDFCLENBQVA7QUFFRDs7QUFFRE8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxPQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBjYXN0UGF0aCA9IHJlcXVpcmUoJy4vX2Nhc3RQYXRoJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgcGF0aGAgZXhpc3RzIG9uIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGNoZWNrIHByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHBhdGhgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNQYXRoKG9iamVjdCwgcGF0aCwgaGFzRnVuYykge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoLFxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gdG9LZXkocGF0aFtpbmRleF0pO1xuICAgIGlmICghKHJlc3VsdCA9IG9iamVjdCAhPSBudWxsICYmIGhhc0Z1bmMob2JqZWN0LCBrZXkpKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIG9iamVjdCA9IG9iamVjdFtrZXldO1xuICB9XG4gIGlmIChyZXN1bHQgfHwgKytpbmRleCAhPSBsZW5ndGgpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGxlbmd0aCA9IG9iamVjdCA9PSBudWxsID8gMCA6IG9iamVjdC5sZW5ndGg7XG4gIHJldHVybiAhIWxlbmd0aCAmJiBpc0xlbmd0aChsZW5ndGgpICYmIGlzSW5kZXgoa2V5LCBsZW5ndGgpICYmXG4gICAgKGlzQXJyYXkob2JqZWN0KSB8fCBpc0FyZ3VtZW50cyhvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNQYXRoO1xuIl19