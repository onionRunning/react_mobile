5d1efdd117f47ad1a8dec779bb55a04b
'use strict';

var GetIntrinsic = require('../GetIntrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var getIteratorMethod = require('../helpers/getIteratorMethod');

var AdvanceStringIndex = require('./AdvanceStringIndex');

var Call = require('./Call');

var GetMethod = require('./GetMethod');

var IsArray = require('./IsArray');

var Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-getiterator


module.exports = function GetIterator(obj, method) {
  var actualMethod = method;

  if (arguments.length < 2) {
    actualMethod = getIteratorMethod({
      AdvanceStringIndex: AdvanceStringIndex,
      GetMethod: GetMethod,
      IsArray: IsArray,
      Type: Type
    }, obj);
  }

  var iterator = Call(actualMethod, obj);

  if (Type(iterator) !== 'Object') {
    throw new $TypeError('iterator must return an object');
  }

  return iterator;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdldEl0ZXJhdG9yLmpzIl0sIm5hbWVzIjpbIkdldEludHJpbnNpYyIsInJlcXVpcmUiLCIkVHlwZUVycm9yIiwiZ2V0SXRlcmF0b3JNZXRob2QiLCJBZHZhbmNlU3RyaW5nSW5kZXgiLCJDYWxsIiwiR2V0TWV0aG9kIiwiSXNBcnJheSIsIlR5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiR2V0SXRlcmF0b3IiLCJvYmoiLCJtZXRob2QiLCJhY3R1YWxNZXRob2QiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJpdGVyYXRvciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsaUJBQUQsQ0FBMUI7O0FBRUEsSUFBSUMsVUFBVSxHQUFHRixZQUFZLENBQUMsYUFBRCxDQUE3Qjs7QUFFQSxJQUFJRyxpQkFBaUIsR0FBR0YsT0FBTyxDQUFDLDhCQUFELENBQS9COztBQUNBLElBQUlHLGtCQUFrQixHQUFHSCxPQUFPLENBQUMsc0JBQUQsQ0FBaEM7O0FBQ0EsSUFBSUksSUFBSSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFsQjs7QUFDQSxJQUFJSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQXZCOztBQUNBLElBQUlNLE9BQU8sR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBckI7O0FBQ0EsSUFBSU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsUUFBRCxDQUFsQixDLENBRUE7OztBQUVBUSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsR0FBckIsRUFBMEJDLE1BQTFCLEVBQWtDO0FBQ2xELE1BQUlDLFlBQVksR0FBR0QsTUFBbkI7O0FBQ0EsTUFBSUUsU0FBUyxDQUFDQyxNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3pCRixJQUFBQSxZQUFZLEdBQUdYLGlCQUFpQixDQUMvQjtBQUNDQyxNQUFBQSxrQkFBa0IsRUFBRUEsa0JBRHJCO0FBRUNFLE1BQUFBLFNBQVMsRUFBRUEsU0FGWjtBQUdDQyxNQUFBQSxPQUFPLEVBQUVBLE9BSFY7QUFJQ0MsTUFBQUEsSUFBSSxFQUFFQTtBQUpQLEtBRCtCLEVBTy9CSSxHQVArQixDQUFoQztBQVNBOztBQUNELE1BQUlLLFFBQVEsR0FBR1osSUFBSSxDQUFDUyxZQUFELEVBQWVGLEdBQWYsQ0FBbkI7O0FBQ0EsTUFBSUosSUFBSSxDQUFDUyxRQUFELENBQUosS0FBbUIsUUFBdkIsRUFBaUM7QUFDaEMsVUFBTSxJQUFJZixVQUFKLENBQWUsZ0NBQWYsQ0FBTjtBQUNBOztBQUVELFNBQU9lLFFBQVA7QUFDQSxDQW5CRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEdldEludHJpbnNpYyA9IHJlcXVpcmUoJy4uL0dldEludHJpbnNpYycpO1xuXG52YXIgJFR5cGVFcnJvciA9IEdldEludHJpbnNpYygnJVR5cGVFcnJvciUnKTtcblxudmFyIGdldEl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaGVscGVycy9nZXRJdGVyYXRvck1ldGhvZCcpO1xudmFyIEFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vQWR2YW5jZVN0cmluZ0luZGV4Jyk7XG52YXIgQ2FsbCA9IHJlcXVpcmUoJy4vQ2FsbCcpO1xudmFyIEdldE1ldGhvZCA9IHJlcXVpcmUoJy4vR2V0TWV0aG9kJyk7XG52YXIgSXNBcnJheSA9IHJlcXVpcmUoJy4vSXNBcnJheScpO1xudmFyIFR5cGUgPSByZXF1aXJlKCcuL1R5cGUnKTtcblxuLy8gaHR0cHM6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWdldGl0ZXJhdG9yXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gR2V0SXRlcmF0b3Iob2JqLCBtZXRob2QpIHtcblx0dmFyIGFjdHVhbE1ldGhvZCA9IG1ldGhvZDtcblx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG5cdFx0YWN0dWFsTWV0aG9kID0gZ2V0SXRlcmF0b3JNZXRob2QoXG5cdFx0XHR7XG5cdFx0XHRcdEFkdmFuY2VTdHJpbmdJbmRleDogQWR2YW5jZVN0cmluZ0luZGV4LFxuXHRcdFx0XHRHZXRNZXRob2Q6IEdldE1ldGhvZCxcblx0XHRcdFx0SXNBcnJheTogSXNBcnJheSxcblx0XHRcdFx0VHlwZTogVHlwZVxuXHRcdFx0fSxcblx0XHRcdG9ialxuXHRcdCk7XG5cdH1cblx0dmFyIGl0ZXJhdG9yID0gQ2FsbChhY3R1YWxNZXRob2QsIG9iaik7XG5cdGlmIChUeXBlKGl0ZXJhdG9yKSAhPT0gJ09iamVjdCcpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignaXRlcmF0b3IgbXVzdCByZXR1cm4gYW4gb2JqZWN0Jyk7XG5cdH1cblxuXHRyZXR1cm4gaXRlcmF0b3I7XG59O1xuIl19